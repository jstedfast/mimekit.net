<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>ArcSigner(String, String, String, DkimSignatureAlgorithm) Constructor</title><meta name="Title" content="ArcSigner(String, String, String, DkimSignatureAlgorithm) Constructor" /><meta name="Microsoft.Help.Id" content="M:MimeKit.Cryptography.ArcSigner.#ctor(System.String,System.String,System.String,MimeKit.Cryptography.DkimSignatureAlgorithm)" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="container" content="MimeKit.Cryptography" /><meta name="file" content="M_MimeKit_Cryptography_ArcSigner__ctor_3" /><meta name="guid" content="M_MimeKit_Cryptography_ArcSigner__ctor_3" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Description" content="Initialize a new instance of the class." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">MailKit Documentation<form id="SearchForm" method="get" action="#" onsubmit="TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Introduction.htm" title="MailKit Documentation" tocid="roottoc">MailKit Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="API Reference" tocid="R_Project_Documentation">API Reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_MimeKit_Cryptography.htm" title="MimeKit.Cryptography" tocid="N_MimeKit_Cryptography">MimeKit.Cryptography</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_MimeKit_Cryptography_ArcSigner.htm" title="ArcSigner Class" tocid="T_MimeKit_Cryptography_ArcSigner">ArcSigner Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_MimeKit_Cryptography_ArcSigner__ctor.htm" title="ArcSigner Constructor" tocid="Overload_MimeKit_Cryptography_ArcSigner__ctor">ArcSigner Constructor</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MimeKit_Cryptography_ArcSigner__ctor_2.htm" title="ArcSigner(String, String, DkimSignatureAlgorithm) Constructor" tocid="M_MimeKit_Cryptography_ArcSigner__ctor_2">ArcSigner(String, String, DkimSignatureAlgorithm) Constructor</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MimeKit_Cryptography_ArcSigner__ctor.htm" title="ArcSigner(AsymmetricKeyParameter, String, String, DkimSignatureAlgorithm) Constructor" tocid="M_MimeKit_Cryptography_ArcSigner__ctor">ArcSigner(AsymmetricKeyParameter, String, String, DkimSignatureAlgorithm) Constructor</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MimeKit_Cryptography_ArcSigner__ctor_1.htm" title="ArcSigner(Stream, String, String, DkimSignatureAlgorithm) Constructor" tocid="M_MimeKit_Cryptography_ArcSigner__ctor_1">ArcSigner(Stream, String, String, DkimSignatureAlgorithm) Constructor</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MimeKit_Cryptography_ArcSigner__ctor_3.htm" title="ArcSigner(String, String, String, DkimSignatureAlgorithm) Constructor" tocid="M_MimeKit_Cryptography_ArcSigner__ctor_3">ArcSigner(String, String, String, DkimSignatureAlgorithm) Constructor</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="MimeKit" src="../icons/Help.png" /></td><td class="titleColumn"><h1>Arc<wbr />Signer(String, String, String, Dkim<wbr />Signature<wbr />Algorithm) Constructor</h1></td></tr></table><div class="summary">
            Initialize a new instance of the <a href="T_MimeKit_Cryptography_ArcSigner.htm">ArcSigner</a> class.
            </div><br /><strong>Namespace:</strong> <a href="N_MimeKit_Cryptography.htm">MimeKit.Cryptography</a><br /><strong>Assembly:</strong> MimeKit (in MimeKit.dll) Version: 4.3.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">protected</span> <span class="identifier">ArcSigner</span>(
	<span class="identifier">string</span> <span class="parameter">fileName</span>,
	<span class="identifier">string</span> <span class="parameter">domain</span>,
	<span class="identifier">string</span> <span class="parameter">selector</span>,
	<span class="identifier">DkimSignatureAlgorithm</span> <span class="parameter">algorithm</span> = <span class="identifier">DkimSignatureAlgorithm</span>.RsaSha256
)</pre></div></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">fileName</span>  <a href="https://docs.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a></dt><dd>The file containing the private key.</dd><dt class="has-text-weight-normal"><span class="parameter">domain</span>  <a href="https://docs.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a></dt><dd>The domain that the signer represents.</dd><dt class="has-text-weight-normal"><span class="parameter">selector</span>  <a href="https://docs.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a></dt><dd>The selector subdividing the domain.</dd><dt class="has-text-weight-normal"><span class="parameter">algorithm</span>  <a href="T_MimeKit_Cryptography_DkimSignatureAlgorithm.htm">DkimSignatureAlgorithm</a>  (Optional)</dt><dd>The signature algorithm.</dd></dl></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDHC')" onkeypress="SectionExpandCollapse_CheckKey('IDHC', event)" tabindex="0"><img id="IDHCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="IDHCSection" class="collapsibleSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="https://docs.microsoft.com/dotnet/api/system.argumentnullexception" target="_blank" rel="noopener noreferrer">ArgumentNullException</a></td><td><p><span class="parameter">fileName</span> is <span class="code">null</span>.</p><p>-or-</p><p><span class="parameter">domain</span> is <span class="code">null</span>.</p><p>-or-</p><p><span class="parameter">selector</span> is <span class="code">null</span>.</p></td></tr><tr><td><a href="https://docs.microsoft.com/dotnet/api/system.argumentexception" target="_blank" rel="noopener noreferrer">ArgumentException</a></td><td><span class="parameter">fileName</span> is a zero-length string, contains only white space, or
            contains one or more invalid characters.
            </td></tr><tr><td><a href="https://docs.microsoft.com/dotnet/api/system.formatexception" target="_blank" rel="noopener noreferrer">FormatException</a></td><td>
            The file did not contain a private key.
            </td></tr><tr><td><a href="https://docs.microsoft.com/dotnet/api/system.io.directorynotfoundexception" target="_blank" rel="noopener noreferrer">DirectoryNotFoundException</a></td><td><span class="parameter">fileName</span> is an invalid file path.
            </td></tr><tr><td><a href="https://docs.microsoft.com/dotnet/api/system.io.filenotfoundexception" target="_blank" rel="noopener noreferrer">FileNotFoundException</a></td><td>
            The specified file path could not be found.
            </td></tr><tr><td><a href="https://docs.microsoft.com/dotnet/api/system.unauthorizedaccessexception" target="_blank" rel="noopener noreferrer">UnauthorizedAccessException</a></td><td>
            The user does not have access to read the specified file.
            </td></tr><tr><td><a href="https://docs.microsoft.com/dotnet/api/system.io.ioexception" target="_blank" rel="noopener noreferrer">IOException</a></td><td>
            An I/O error occurred.
            </td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDBCSection" class="collapsibleSection">
            Creates a new <a href="T_MimeKit_Cryptography_ArcSigner.htm">ArcSigner</a>.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDCC')" onkeypress="SectionExpandCollapse_CheckKey('IDCC', event)" tabindex="0"><img id="IDCCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDCCSection" class="collapsibleSection"><div id="IDACC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDACC_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDACC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDACC');return false;" title="Copy">Copy</a></div></div><div id="IDACC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.IO;
<span class="highlight-keyword">using</span> System.Text;
<span class="highlight-keyword">using</span> System.Threading;
<span class="highlight-keyword">using</span> System.Threading.Tasks;
<span class="highlight-keyword">using</span> System.Collections.Generic;

<span class="highlight-keyword">using</span> MimeKit;
<span class="highlight-keyword">using</span> MimeKit.Cryptography;

<span class="highlight-keyword">namespace</span> ArcSignerExample
{
    <span class="highlight-keyword">class</span> ExampleArcSigner : ArcSigner
    {
        <span class="highlight-keyword">public</span> ExampleArcSigner (Stream stream, <span class="highlight-keyword">string</span> domain, <span class="highlight-keyword">string</span> selector, DkimSignatureAlgorithm algorithm = DkimSignatureAlgorithm.RsaSha256) : <span class="highlight-keyword">base</span> (stream, domain, selector, algorithm)
        {
        }

        <span class="highlight-keyword">public</span> ExampleArcSigner (<span class="highlight-keyword">string</span> fileName, <span class="highlight-keyword">string</span> domain, <span class="highlight-keyword">string</span> selector, DkimSignatureAlgorithm algorithm = DkimSignatureAlgorithm.RsaSha256) : <span class="highlight-keyword">base</span> (fileName, domain, selector, algorithm)
        {
        }

        <span class="highlight-keyword">public</span> ExampleArcSigner (AsymmetricKeyParameter key, <span class="highlight-keyword">string</span> domain, <span class="highlight-keyword">string</span> selector, DkimSignatureAlgorithm algorithm = DkimSignatureAlgorithm.RsaSha256) : <span class="highlight-keyword">base</span> (key, domain, selector, algorithm)
        {
        }

        <span class="highlight-keyword">public</span> <span class="highlight-keyword">string</span> AuthenticationServiceIdentifier {
            <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>;
        }

        <span class="highlight-comment">/// &lt;summary&gt;</span>
        <span class="highlight-comment">/// Generate the ARC-Authentication-Results header.</span>
        <span class="highlight-comment">/// &lt;/summary&gt;</span>
        <span class="highlight-comment">/// &lt;remarks&gt;</span>
        <span class="highlight-comment">/// The ARC-Authentication-Results header contains information detailing the results of</span>
        <span class="highlight-comment">/// authenticating/verifying the message via ARC, DKIM, SPF, etc.</span>
        <span class="highlight-comment">///</span>
        <span class="highlight-comment">/// In the following implementation, we assume that all of these authentication results</span>
        <span class="highlight-comment">/// have already been determined by other mail software that has added some Authentication-Results</span>
        <span class="highlight-comment">/// headers containing this information.</span>
        <span class="highlight-comment">///</span>
        <span class="highlight-comment">/// Note: This method is used when ArcSigner.Sign() is called instead of ArcSigner.SignAsync().</span>
        <span class="highlight-comment">/// &lt;/remarks&gt;</span>
        <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> AuthenticationResults GenerateArcAuthenticationResults (FormatOptions options, MimeMessage message, CancellationToken cancellationToken)
        {
            <span class="highlight-keyword">var</span> results = <span class="highlight-keyword">new</span> AuthenticationResults (AuthenticationServiceIdentifier);

            <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> i = <span class="highlight-number">0</span>; i &lt; message.Headers.Count; i++) {
                <span class="highlight-keyword">var</span> header = message.Headers[i];

                <span class="highlight-keyword">if</span> (header.Id != HeaderId.AuthenticationResults)
                    <span class="highlight-keyword">continue</span>;

                <span class="highlight-keyword">if</span> (!AuthenticationResults.TryParse (header.RawValue, <span class="highlight-keyword">out</span> AuthenticationResults authres))
                    <span class="highlight-keyword">continue</span>;

                <span class="highlight-keyword">if</span> (authres.AuthenticationServiceIdentifier != AuthenticationServiceIdentifier)
                    <span class="highlight-keyword">continue</span>;

                <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> result <span class="highlight-keyword">in</span> authres.Results) {
                    <span class="highlight-keyword">if</span> (!results.Results.Any (r =&gt; r.Method == result.Method))
                        results.Results.Add (result);
                }
            }

            <span class="highlight-keyword">return</span> results;
        }

        <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> Task&lt;AuthenticationResults&gt; GenerateArcAuthenticationResultsAsync (FormatOptions options, MimeMessage message, CancellationToken cancellationToken)
        {
            <span class="highlight-keyword">return</span> Task.FromResult (GenerateArcAuthenticationResults (options, message, cancellationToken));
        }
    }

    <span class="highlight-keyword">class</span> Program
    {
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Main (<span class="highlight-keyword">string</span>[] args)
        {
            <span class="highlight-keyword">if</span> (args.Length &lt; <span class="highlight-number">2</span>) {
                Help ();
                <span class="highlight-keyword">return</span>;
            }

            <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> i = <span class="highlight-number">0</span>; i &lt; args.Length; i++) {
                <span class="highlight-keyword">if</span> (args[i] == <span class="highlight-literal">"--help"</span>) {
                    Help ();
                    <span class="highlight-keyword">return</span>;
                }
            }

            <span class="highlight-keyword">var</span> headers = <span class="highlight-keyword">new</span> HeaderId[] { HeaderId.From, HeaderId.Subject, HeaderId.Date };
            <span class="highlight-keyword">var</span> signer = <span class="highlight-keyword">new</span> ExampleArcSigner (<span class="highlight-literal">"privatekey.pem"</span>, <span class="highlight-literal">"example.com"</span>, <span class="highlight-literal">"brisbane"</span>, DkimSignatureAlgorithm.RsaSha256) {
                HeaderCanonicalizationAlgorithm = DkimCanonicalizationAlgorithm.Simple,
                BodyCanonicalizationAlgorithm = DkimCanonicalizationAlgorithm.Simple,
                AgentOrUserIdentifier = <span class="highlight-literal">"@eng.example.com"</span>,
            };

            <span class="highlight-keyword">if</span> (!File.Exists (args[<span class="highlight-number">0</span>])) {
                Console.Error.WriteLine (<span class="highlight-literal">"{0}: No such file."</span>, args[<span class="highlight-number">0</span>]);
                <span class="highlight-keyword">return</span>;
            }

            <span class="highlight-keyword">var</span> message = MimeMessage.Load (args[<span class="highlight-number">0</span>]);

            <span class="highlight-comment">// Prepare the message body to be sent over a 7bit transport (such as older versions of SMTP).</span>
            <span class="highlight-comment">// Note: If the SMTP server you will be sending the message over supports the 8BITMIME extension,</span>
            <span class="highlight-comment">// then you can use `EncodingConstraint.EightBit` instead.</span>
            message.Prepare (EncodingConstraint.SevenBit);

            signer.Sign (message, headers);

            <span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> stream = File.Create (args[<span class="highlight-number">1</span>]))
                message.WriteTo (stream);
        }

        <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Help ()
        {
            Console.WriteLine (<span class="highlight-literal">"Usage is: ArcSigner [options] [message] [output]"</span>);
            Console.WriteLine ();
            Console.WriteLine (<span class="highlight-literal">"Options:"</span>);
            Console.WriteLine (<span class="highlight-literal">"  --help               This help menu."</span>);
        }
    }
}</pre></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="T_MimeKit_Cryptography_ArcSigner.htm">ArcSigner Class</a></div><div><a href="Overload_MimeKit_Cryptography_ArcSigner__ctor.htm">ArcSigner Overload</a></div><div><a href="N_MimeKit_Cryptography.htm">MimeKit.Cryptography Namespace</a></div></div></div></div><div id="PageFooter" class="pageFooter"><!-- Global site tag (gtag.js) - Google Analytics -->
<script src="https://www.googletagmanager.com/gtag/js?id=UA-63841238-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-63841238-1');
</script><p><a href="https://github.com/jstedfast" target="_blank" rel="noopener noreferrer">Copyright © 2013-2023 Jeffrey Stedfast</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:jestedfa%40microsoft.com?Subject=MailKit%20Documentation">Jeffrey Stedfast</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script></div></body></html>