<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>ArcHeaderValidationResult Class</title><meta name="Title" content="ArcHeaderValidationResult Class" /><meta name="Microsoft.Help.Id" content="T:MimeKit.Cryptography.ArcHeaderValidationResult" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="MimeKit.Cryptography.ArcHeaderValidationResult class" /><meta name="System.Keywords" content="ArcHeaderValidationResult class" /><meta name="Microsoft.Help.F1" content="MimeKit.Cryptography.ArcHeaderValidationResult" /><meta name="Microsoft.Help.F1" content="ArcHeaderValidationResult" /><meta name="container" content="MimeKit.Cryptography" /><meta name="file" content="T_MimeKit_Cryptography_ArcHeaderValidationResult" /><meta name="guid" content="T_MimeKit_Cryptography_ArcHeaderValidationResult" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Description" content="An ARC header validation result." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">MailKit Documentation<form id="SearchForm" method="get" action="#" onsubmit="TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Introduction.htm" title="MailKit Documentation" tocid="roottoc">MailKit Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="API Reference" tocid="R_Project_Documentation">API Reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_MimeKit_Cryptography.htm" title="MimeKit.Cryptography" tocid="N_MimeKit_Cryptography">MimeKit.Cryptography</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_MimeKit_Cryptography_ArcHeaderValidationResult.htm" title="ArcHeaderValidationResult Class" tocid="T_MimeKit_Cryptography_ArcHeaderValidationResult">ArcHeaderValidationResult Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MimeKit_Cryptography_ArcHeaderValidationResult__ctor.htm" title="ArcHeaderValidationResult Constructor" tocid="M_MimeKit_Cryptography_ArcHeaderValidationResult__ctor">ArcHeaderValidationResult Constructor</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Properties_T_MimeKit_Cryptography_ArcHeaderValidationResult.htm" title="ArcHeaderValidationResult Properties" tocid="Properties_T_MimeKit_Cryptography_ArcHeaderValidationResult">ArcHeaderValidationResult Properties</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/Methods_T_MimeKit_Cryptography_ArcHeaderValidationResult.htm" title="ArcHeaderValidationResult Methods" tocid="Methods_T_MimeKit_Cryptography_ArcHeaderValidationResult">ArcHeaderValidationResult Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="MimeKit" src="../icons/Help.png" /></td><td class="titleColumn"><h1>Arc<wbr />Header<wbr />Validation<wbr />Result Class</h1></td></tr></table><div class="summary">
            An ARC header validation result.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDA')" onkeypress="SectionExpandCollapse_CheckKey('IDDA', event)" tabindex="0"><img id="IDDAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="IDDASection" class="collapsibleSection"><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">System<span id="LST8F8F1247_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Object</a><br />  <span class="selflink">MimeKit.Cryptography<span id="LST8F8F1247_1" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>ArcHeaderValidationResult</span><br /></div><br /><strong>Namespace:</strong> <a href="N_MimeKit_Cryptography.htm">MimeKit.Cryptography</a><br /><strong>Assembly:</strong> MimeKit (in MimeKit.dll) Version: 4.10.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">ArcHeaderValidationResult</span></pre></div></div></div></div><p>The <span class="selflink">ArcHeaderValidationResult</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDAEA')" onkeypress="SectionExpandCollapse_CheckKey('IDAEA', event)" tabindex="0"><img id="IDAEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="IDAEASection" class="collapsibleSection"><table id="ConstructorList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_MimeKit_Cryptography_ArcHeaderValidationResult__ctor.htm">ArcHeaderValidationResult</a></td><td>
            Initialize a new instance of the <span class="selflink">ArcHeaderValidationResult</span> class.
            </td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDHEA')" onkeypress="SectionExpandCollapse_CheckKey('IDHEA', event)" tabindex="0"><img id="IDHEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="IDHEASection" class="collapsibleSection"><table id="PropertyList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_MimeKit_Cryptography_ArcHeaderValidationResult_Header.htm">Header</a></td><td>
            Get the ARC header.
            </td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_MimeKit_Cryptography_ArcHeaderValidationResult_Signature.htm">Signature</a></td><td>
            Get the signature validation result.
            </td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBEA')" onkeypress="SectionExpandCollapse_CheckKey('IDBEA', event)" tabindex="0"><img id="IDBEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="IDBEASection" class="collapsibleSection"><table id="MethodList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noopener noreferrer">Equals</a></td><td><br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.finalize" target="_blank" rel="noopener noreferrer">Finalize</a></td><td><br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noopener noreferrer">GetHashCode</a></td><td><br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noopener noreferrer">GetType</a></td><td><br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone" target="_blank" rel="noopener noreferrer">MemberwiseClone</a></td><td><br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noopener noreferrer">ToString</a></td><td><br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDBCSection" class="collapsibleSection">
            Represents an ARC header and its signature validation result.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDCC')" onkeypress="SectionExpandCollapse_CheckKey('IDCC', event)" tabindex="0"><img id="IDCCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDCCSection" class="collapsibleSection"><div id="IDACC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDACC_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDACC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDACC');return false;" title="Copy">Copy</a></div></div><div id="IDACC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.IO;
<span class="highlight-keyword">using</span> System.Text;
<span class="highlight-keyword">using</span> System.Threading;
<span class="highlight-keyword">using</span> System.Threading.Tasks;
<span class="highlight-keyword">using</span> System.Collections.Generic;

<span class="highlight-keyword">using</span> Heijden.DNS;

<span class="highlight-keyword">using</span> Org.BouncyCastle.Crypto;

<span class="highlight-keyword">using</span> MimeKit;
<span class="highlight-keyword">using</span> MimeKit.Cryptography;

<span class="highlight-keyword">namespace</span> ArcVerifierExample
{
    <span class="highlight-comment">// Note: By using the DkimPublicKeyLocatorBase, we avoid having to parse the DNS TXT records</span>
    <span class="highlight-comment">// in order to get the public key ourselves.</span>
    <span class="highlight-keyword">class</span> ExamplePublicKeyLocator : DkimPublicKeyLocatorBase
    {
        <span class="highlight-keyword">readonly</span> Dictionary&lt;<span class="highlight-keyword">string</span>, AsymmetricKeyParameter&gt; cache;
        <span class="highlight-keyword">readonly</span> Resolver resolver;

        <span class="highlight-keyword">public</span> ExamplePublicKeyLocator ()
        {
            cache = <span class="highlight-keyword">new</span> Dictionary&lt;<span class="highlight-keyword">string</span>, AsymmetricKeyParameter&gt; ();

            resolver = <span class="highlight-keyword">new</span> Resolver (<span class="highlight-literal">"8.8.8.8"</span>) {
                TransportType = TransportType.Udp,
                UseCache = <span class="highlight-keyword">true</span>,
                Retries = <span class="highlight-number">3</span>
            };
        }

        AsymmetricKeyParameter DnsLookup (<span class="highlight-keyword">string</span> domain, <span class="highlight-keyword">string</span> selector, CancellationToken cancellationToken)
        {
            <span class="highlight-keyword">var</span> query = selector + <span class="highlight-literal">"._domainkey."</span> + domain;
            AsymmetricKeyParameter pubkey;

            <span class="highlight-comment">// checked if we've already fetched this key</span>
            <span class="highlight-keyword">if</span> (cache.TryGetValue (query, <span class="highlight-keyword">out</span> pubkey))
                <span class="highlight-keyword">return</span> pubkey;

            <span class="highlight-comment">// make a DNS query</span>
            <span class="highlight-keyword">var</span> response = resolver.Query (query, QType.TXT);
            <span class="highlight-keyword">var</span> builder = <span class="highlight-keyword">new</span> StringBuilder ();

            <span class="highlight-comment">// combine the TXT records into 1 string buffer</span>
            <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> record <span class="highlight-keyword">in</span> response.RecordsTXT) {
                <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> text <span class="highlight-keyword">in</span> record.TXT)
                    builder.Append (text);
            }

            <span class="highlight-keyword">var</span> txt = builder.ToString ();

            <span class="highlight-comment">// DkimPublicKeyLocatorBase provides us with this helpful method.</span>
            pubkey = GetPublicKey (txt);

            cache.Add (query, pubkey);

            <span class="highlight-keyword">return</span> pubkey;
        }

        <span class="highlight-keyword">public</span> AsymmetricKeyParameter LocatePublicKey (<span class="highlight-keyword">string</span> methods, <span class="highlight-keyword">string</span> domain, <span class="highlight-keyword">string</span> selector, CancellationToken cancellationToken = <span class="highlight-keyword">default</span> (CancellationToken))
        {
            <span class="highlight-keyword">var</span> methodList = methods.Split (<span class="highlight-keyword">new</span> <span class="highlight-keyword">char</span>[] { <span class="highlight-literal">':'</span> }, StringSplitOptions.RemoveEmptyEntries);
            <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> i = <span class="highlight-number">0</span>; i &lt; methodList.Length; i++) {
                <span class="highlight-keyword">if</span> (methodList[i] == <span class="highlight-literal">"dns/txt"</span>)
                    <span class="highlight-keyword">return</span> DnsLookup (domain, selector, cancellationToken);
            }

            <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> NotSupportedException (<span class="highlight-keyword">string</span>.Format (<span class="highlight-literal">"{0} does not include any supported lookup methods."</span>, methods));
        }

        <span class="highlight-keyword">public</span> Task&lt;AsymmetricKeyParameter&gt; LocatePublicKeyAsync (<span class="highlight-keyword">string</span> methods, <span class="highlight-keyword">string</span> domain, <span class="highlight-keyword">string</span> selector, CancellationToken cancellationToken = <span class="highlight-keyword">default</span> (CancellationToken))
        {
            <span class="highlight-keyword">return</span> Task.Run (() =&gt; {
                <span class="highlight-keyword">return</span> LocatePublicKey (methods, domain, selector, cancellationToken);
            }, cancellationToken);
        }
    }

    <span class="highlight-keyword">class</span> Program
    {
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Main (<span class="highlight-keyword">string</span>[] args)
        {
            <span class="highlight-keyword">if</span> (args.Length == <span class="highlight-number">0</span>) {
                Help ();
                <span class="highlight-keyword">return</span>;
            }

            <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> i = <span class="highlight-number">0</span>; i &lt; args.Length; i++) {
                <span class="highlight-keyword">if</span> (args[i] == <span class="highlight-literal">"--help"</span>) {
                    Help ();
                    <span class="highlight-keyword">return</span>;
                }
            }

            <span class="highlight-keyword">var</span> locator = <span class="highlight-keyword">new</span> ExamplePublicKeyLocator ();
            <span class="highlight-keyword">var</span> verifier = <span class="highlight-keyword">new</span> ArcVerifier (locator);

            <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> i = <span class="highlight-number">0</span>; i &lt; args.Length; i++) {
                <span class="highlight-keyword">if</span> (!File.Exists (args[i])) {
                    Console.Error.WriteLine (<span class="highlight-literal">"{0}: No such file."</span>, args[i]);
                    <span class="highlight-keyword">continue</span>;
                }

                Console.Write (<span class="highlight-literal">"{0} -&gt; "</span>, args[i]);

                <span class="highlight-keyword">var</span> message = MimeMessage.Load (args[i]);
                <span class="highlight-keyword">var</span> result = verifier.Verify (message);

                <span class="highlight-keyword">switch</span> (result.Chain) {
                <span class="highlight-keyword">case</span> ArcSignatureValidationResult.None:
                    Console.WriteLine (<span class="highlight-literal">"No ARC signatures to verify."</span>);
                    <span class="highlight-keyword">break</span>;
                <span class="highlight-keyword">case</span> ArcSignatureValidationResult.Pass:
                    Console.ForegroundColor = ConsoleColor.Green;
                    Console.WriteLine (<span class="highlight-literal">"PASS"</span>);
                    Console.ResetColor ();
                    <span class="highlight-keyword">break</span>;
                <span class="highlight-keyword">case</span> ArcSignatureValidationResult.Fail:
                    Console.ForegroundColor = ConsoleColor.Red;
                    Console.WriteLine (<span class="highlight-literal">"FAIL"</span>);
                    Console.ResetColor ();
                    <span class="highlight-keyword">break</span>;
                }
            }
        }

        <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Help ()
        {
            Console.WriteLine (<span class="highlight-literal">"Usage is: ArcVerifier [options] [messages]"</span>);
            Console.WriteLine ();
            Console.WriteLine (<span class="highlight-literal">"Options:"</span>);
            Console.WriteLine (<span class="highlight-literal">"  --help               This help menu."</span>);
        }
    }
}</pre></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="N_MimeKit_Cryptography.htm">MimeKit.Cryptography Namespace</a></div></div></div></div><div id="PageFooter" class="pageFooter"><!-- Global site tag (gtag.js) - Google Analytics -->
<script src="https://www.googletagmanager.com/gtag/js?id=UA-63841238-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-63841238-1');
</script><p><a href="https://github.com/jstedfast" target="_blank" rel="noopener noreferrer">Copyright © 2013-2025 Jeffrey Stedfast</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:jestedfa%40microsoft.com?Subject=MailKit%20Documentation">Jeffrey Stedfast</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script></div></body></html>