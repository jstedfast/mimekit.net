<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>MimeParser.MimeMessageBegin Event</title><meta name="Title" content="MimeMessageBegin Event" /><meta name="Microsoft.Help.Id" content="E:MimeKit.MimeParser.MimeMessageBegin" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="MimeParser.MimeMessageBegin event" /><meta name="System.Keywords" content="MimeMessageBegin event" /><meta name="Microsoft.Help.F1" content="MimeKit.MimeParser.MimeMessageBegin" /><meta name="Microsoft.Help.F1" content="MimeParser.MimeMessageBegin" /><meta name="Microsoft.Help.F1" content="MimeMessageBegin" /><meta name="container" content="MimeKit" /><meta name="file" content="E_MimeKit_MimeParser_MimeMessageBegin" /><meta name="guid" content="E_MimeKit_MimeParser_MimeMessageBegin" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Description" content="An event signifying the beginning of a new has been encountered." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">MailKit Documentation<form id="SearchForm" method="get" action="#" onsubmit="TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Introduction.htm" title="MailKit Documentation" tocid="roottoc">MailKit Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="API Reference" tocid="R_Project_Documentation">API Reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_MimeKit.htm" title="MimeKit" tocid="N_MimeKit">MimeKit</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_MimeKit_MimeParser.htm" title="MimeParser Class" tocid="T_MimeKit_MimeParser">MimeParser Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Events_T_MimeKit_MimeParser.htm" title="MimeParser Events" tocid="Events_T_MimeKit_MimeParser">MimeParser Events</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_MimeKit_MimeParser_MimeEntityBegin.htm" title="MimeEntityBegin Event" tocid="E_MimeKit_MimeParser_MimeEntityBegin">MimeEntityBegin Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_MimeKit_MimeParser_MimeEntityEnd.htm" title="MimeEntityEnd Event" tocid="E_MimeKit_MimeParser_MimeEntityEnd">MimeEntityEnd Event</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_MimeKit_MimeParser_MimeMessageBegin.htm" title="MimeMessageBegin Event" tocid="E_MimeKit_MimeParser_MimeMessageBegin">MimeMessageBegin Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_MimeKit_MimeParser_MimeMessageEnd.htm" title="MimeMessageEnd Event" tocid="E_MimeKit_MimeParser_MimeMessageEnd">MimeMessageEnd Event</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="MimeKit" src="../icons/Help.png" /></td><td class="titleColumn"><h1>Mime<wbr />Parser<span id="LST878D01B_0" data-languageSpecificText="cpp=::|nu=."></span>Mime<wbr />Message<wbr />Begin Event</h1></td></tr></table><div class="summary">
            An event signifying the beginning of a new <a href="T_MimeKit_MimeMessage.htm">MimeMessage</a> has been encountered.
            </div><br /><strong>Namespace:</strong> <a href="N_MimeKit.htm">MimeKit</a><br /><strong>Assembly:</strong> MimeKit (in MimeKit.dll) Version: 4.12.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> event <span class="identifier">EventHandler</span>&lt;<span class="identifier">MimeMessageBeginEventArgs</span>&gt; <span class="identifier">MimeMessageBegin</span></pre></div></div></div><h4>Value</h4><a href="https://learn.microsoft.com/dotnet/api/system.eventhandler-1" target="_blank" rel="noopener noreferrer">EventHandler</a><span id="LST878D01B_1" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="T_MimeKit_MimeMessageBeginEventArgs.htm">MimeMessageBeginEventArgs</a><span id="LST878D01B_2" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDBCSection" class="collapsibleSection">
            An event signifying the beginning of a new <a href="T_MimeKit_MimeMessage.htm">MimeMessage</a> has been encountered.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDCC')" onkeypress="SectionExpandCollapse_CheckKey('IDCC', event)" tabindex="0"><img id="IDCCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDCCSection" class="collapsibleSection"><div id="IDACC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDACC_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDACC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDACC');return false;" title="Copy">Copy</a></div></div><div id="IDACC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">class</span> MimeOffsets
{
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">string</span> MimeType { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }

    <span class="highlight-keyword">public</span> <span class="highlight-keyword">long</span>? MboxMarkerOffset { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }

    <span class="highlight-keyword">public</span> <span class="highlight-keyword">int</span> LineNumber { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }

    <span class="highlight-keyword">public</span> <span class="highlight-keyword">long</span> BeginOffset { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }

    <span class="highlight-keyword">public</span> <span class="highlight-keyword">long</span> HeadersEndOffset { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }

    <span class="highlight-keyword">public</span> <span class="highlight-keyword">long</span> EndOffset { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }

    <span class="highlight-keyword">public</span> MimeOffsets Message { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }

    <span class="highlight-keyword">public</span> List&lt;MimeOffsets&gt; Children { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }

    <span class="highlight-keyword">public</span> <span class="highlight-keyword">long</span> Octets { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }

    <span class="highlight-keyword">public</span> <span class="highlight-keyword">int</span>? Lines { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }
}

<span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> MimeOffsetsExample (<span class="highlight-keyword">string</span> fileName)
{
    <span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> stream = fileName.OpenRead (fileName)) {
        <span class="highlight-keyword">var</span> messages = <span class="highlight-keyword">new</span> Dictionary&lt;MimeMessage, MimeOffsets&gt; ();
        <span class="highlight-keyword">var</span> entities = <span class="highlight-keyword">new</span> Dictionary&lt;MimeEntity, MimeOffsets&gt; ();
        MimeOffsets messageOffsets = <span class="highlight-keyword">null</span>;

        <span class="highlight-keyword">var</span> parser = <span class="highlight-keyword">new</span> MimeParser (stream, MimeFormat.Entity);

        <span class="highlight-comment">// Connect a handler to track MimeMessage begin offsets</span>
        parser.MimeMessageBegin += <span class="highlight-keyword">delegate</span> (sender, args) {
            <span class="highlight-keyword">var</span> parser = (MimeParser) sender;

            <span class="highlight-comment">// Create a new MimeOffsets for this message.</span>
            <span class="highlight-keyword">var</span> offsets = <span class="highlight-keyword">new</span> MimeOffsets {
                BeginOffset = args.BeginOffset,
                LineNumber = args.LineNumber
            };

            <span class="highlight-keyword">if</span> (args.Parent != <span class="highlight-keyword">null</span>) {
                <span class="highlight-comment">// If we get here, then it means that the MimeMessage is part of</span>
                <span class="highlight-comment">// a message/rfc822 "attachment".</span>
                <span class="highlight-keyword">var</span> parentOffsets = entities[args.Parent];
                parentOffsets.Message = offsets;
            } <span class="highlight-keyword">else</span> {
                <span class="highlight-comment">// Otherwise, this is the top-level MimeMessage.</span>
                offsets.MboxMarkerOffset = parser.MboxMarkerOffset;
                messageOffsets = offsets;
            }

            messages.Add (args.Message, offsets);
        };

        <span class="highlight-comment">// Connect a handler to track MimeMessage end offsets</span>
        parser.MimeMessageEnd += <span class="highlight-keyword">delegate</span> (sender, args) {
            <span class="highlight-comment">// Our MimeMessageBegin event handler already created a MimeOffsets for</span>
            <span class="highlight-comment">// this message. Use the `messages` dictionary to retrieve it.</span>
            <span class="highlight-keyword">var</span> offsets = messages[args.Message];

            <span class="highlight-comment">// Track the size of the MimeMessage in octets (aka bytes), the offset</span>
            <span class="highlight-comment">// for the end of the header block, and the end of the message.</span>
            offsets.Octets = args.EndOffset - args.HeadersEndOffset;
            offsets.HeadersEndOffset = args.HeadersEndOffset;
            offsets.EndOffset = args.EndOffset;
        };

        <span class="highlight-comment">// Connect a handler to track MimeEntity begin offsets</span>
        parser.MimeEntityBegin += <span class="highlight-keyword">delegate</span> (sender, args) {
            <span class="highlight-comment">// Create a new MimeOffsets for this MIME entity (which could be a MimePart, MessagePart, or Multipart).</span>
            <span class="highlight-keyword">var</span> offsets = <span class="highlight-keyword">new</span> MimeOffsets {
                MimeType = args.Entity.ContentType.MimeType,
                BeginOffset = args.BeginOffset,
                LineNumber = args.LineNumber
            };

            <span class="highlight-keyword">if</span> (args.Parent != <span class="highlight-keyword">null</span> &amp;&amp; entities.TryGetValue (args.Parent, <span class="highlight-keyword">out</span> <span class="highlight-keyword">var</span> parentOffsets)) {
                parentOffsets.Children ??= <span class="highlight-keyword">new</span> List&lt;MimeOffsets&gt; ();
                parentOffsets.Children.Add (offsets);
            }

            entities.Add (args.Entity, offsets);
        };

        <span class="highlight-comment">// Connect a handler to track MimeEntity end offsets</span>
        parser.MimeEntityEnd += <span class="highlight-keyword">delegate</span> (sender, args) {
            <span class="highlight-comment">// Our MimeEntityBegin event handler already created a MimeOffsets for</span>
            <span class="highlight-comment">// this entity. Use the `entities` dictionary to retrieve it.</span>
            <span class="highlight-keyword">var</span> offsets = entities[args.Entity];

            <span class="highlight-comment">// Track the size of the MimeEntity in octets (aka bytes), the offset</span>
            <span class="highlight-comment">// for the end of the header block, the end of the entity, and the</span>
            <span class="highlight-comment">// line count.</span>
            offsets.Octets = args.EndOffset - args.HeadersEndOffset;
            offsets.HeadersEndOffset = args.HeadersEndOffset;
            offsets.EndOffset = args.EndOffset;
            offsets.Lines = args.Lines;
        };

        <span class="highlight-comment">// Parse the message (which will emit the events as appropriate).</span>
        <span class="highlight-keyword">var</span> message = parser.ParseMessage ();

        <span class="highlight-comment">// Now we can find out the offsets of each MimePart:</span>
        <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> bodyPart <span class="highlight-keyword">in</span> message.BodyParts.OfType&lt;MimePart&gt; ()) {
            <span class="highlight-keyword">var</span> offsets = entities[bodyPart];

            Console.WriteLine ($<span class="highlight-literal">"The offsets for the MIME part for {bodyPart.ContentType} are:"</span>);
            Console.WriteLine ($<span class="highlight-literal">"  - LineNumber: {offsets.LineNumber}"</span>)
            Console.WriteLine ($<span class="highlight-literal">"  - BeginOffset: {offsets.BeginOffset}"</span>);
            Console.WriteLine ($<span class="highlight-literal">"  - HeadersEndOffset: {offsets.HeadersEndOffset}"</span>); <span class="highlight-comment">// Note: This is also where the *content* begins.</span>
            Console.WriteLine ($<span class="highlight-literal">"  - EndOffset: {offsets.BeginOffset}"</span>);
            Console.WriteLine ($<span class="highlight-literal">"  - Octets: {offsets.Octets}"</span>);
            Console.WriteLine ($<span class="highlight-literal">"  - Lines: {offsets.Lines}"</span>);
        }
    }
}</pre></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="T_MimeKit_MimeParser.htm">MimeParser Class</a></div><div><a href="N_MimeKit.htm">MimeKit Namespace</a></div></div></div></div><div id="PageFooter" class="pageFooter"><!-- Global site tag (gtag.js) - Google Analytics -->
<script src="https://www.googletagmanager.com/gtag/js?id=UA-63841238-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-63841238-1');
</script><p><a href="https://github.com/jstedfast" target="_blank" rel="noopener noreferrer">Copyright © 2013-2025 Jeffrey Stedfast</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:jestedfa%40microsoft.com?Subject=MailKit%20Documentation">Jeffrey Stedfast</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script></div></body></html>