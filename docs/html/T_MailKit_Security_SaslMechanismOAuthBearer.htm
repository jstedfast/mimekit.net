<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>SaslMechanismOAuthBearer Class</title><meta name="Title" content="SaslMechanismOAuthBearer Class" /><meta name="Microsoft.Help.Id" content="T:MailKit.Security.SaslMechanismOAuthBearer" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="MailKit.Security.SaslMechanismOAuthBearer class" /><meta name="System.Keywords" content="SaslMechanismOAuthBearer class" /><meta name="Microsoft.Help.F1" content="MailKit.Security.SaslMechanismOAuthBearer" /><meta name="Microsoft.Help.F1" content="SaslMechanismOAuthBearer" /><meta name="container" content="MailKit.Security" /><meta name="file" content="T_MailKit_Security_SaslMechanismOAuthBearer" /><meta name="guid" content="T_MailKit_Security_SaslMechanismOAuthBearer" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Description" content="The OAuth Bearer SASL mechanism." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">MailKit Documentation<form id="SearchForm" method="get" action="#" onsubmit="TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Introduction.htm" title="MailKit Documentation" tocid="roottoc">MailKit Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="API Reference" tocid="R_Project_Documentation">API Reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_MailKit_Security.htm" title="MailKit.Security" tocid="N_MailKit_Security">MailKit.Security</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_MailKit_Security_SaslMechanismOAuthBearer.htm" title="SaslMechanismOAuthBearer Class" tocid="T_MailKit_Security_SaslMechanismOAuthBearer">SaslMechanismOAuthBearer Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_MailKit_Security_SaslMechanismOAuthBearer__ctor.htm" title="SaslMechanismOAuthBearer Constructor" tocid="Overload_MailKit_Security_SaslMechanismOAuthBearer__ctor">SaslMechanismOAuthBearer Constructor</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Properties_T_MailKit_Security_SaslMechanismOAuthBearer.htm" title="SaslMechanismOAuthBearer Properties" tocid="Properties_T_MailKit_Security_SaslMechanismOAuthBearer">SaslMechanismOAuthBearer Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_MailKit_Security_SaslMechanismOAuthBearer.htm" title="SaslMechanismOAuthBearer Methods" tocid="Methods_T_MailKit_Security_SaslMechanismOAuthBearer">SaslMechanismOAuthBearer Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="MimeKit" src="../icons/Help.png" /></td><td class="titleColumn"><h1>Sasl<wbr />Mechanism<wbr />OAuth<wbr />Bearer Class</h1></td></tr></table><div class="summary">
            The OAuth Bearer SASL mechanism.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDA')" onkeypress="SectionExpandCollapse_CheckKey('IDDA', event)" tabindex="0"><img id="IDDAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="IDDASection" class="collapsibleSection"><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">System<span id="LSTFA7BC422_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Object</a><br />  <a href="T_MailKit_Security_SaslMechanism.htm">MailKit.Security<span id="LSTFA7BC422_1" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>SaslMechanism</a><br />    <span class="selflink">MailKit.Security<span id="LSTFA7BC422_2" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>SaslMechanismOAuthBearer</span><br /></div><br /><strong>Namespace:</strong> <a href="N_MailKit_Security.htm">MailKit.Security</a><br /><strong>Assembly:</strong> MailKit (in MailKit.dll) Version: 4.10.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">SaslMechanismOAuthBearer</span> : <span class="identifier">SaslMechanism</span></pre></div></div></div></div><p>The <span class="selflink">SaslMechanismOAuthBearer</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDADEA')" onkeypress="SectionExpandCollapse_CheckKey('IDADEA', event)" tabindex="0"><img id="IDADEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="IDADEASection" class="collapsibleSection"><table id="ConstructorList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_MailKit_Security_SaslMechanismOAuthBearer__ctor.htm">SaslMechanismOAuthBearer(NetworkCredential)</a></td><td>
            Initializes a new instance of the <span class="selflink">SaslMechanismOAuthBearer</span> class.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_MailKit_Security_SaslMechanismOAuthBearer__ctor_1.htm">SaslMechanismOAuthBearer(String, String)</a></td><td>
            Initializes a new instance of the <span class="selflink">SaslMechanismOAuthBearer</span> class.
            </td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDLEA')" onkeypress="SectionExpandCollapse_CheckKey('IDLEA', event)" tabindex="0"><img id="IDLEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="IDLEASection" class="collapsibleSection"><table id="PropertyList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_MailKit_Security_SaslMechanism_Credentials.htm">Credentials</a></td><td>
            Get the user's credentials.
            <br />(Inherited from <a href="T_MailKit_Security_SaslMechanism.htm">SaslMechanism</a>)</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_MailKit_Security_SaslMechanism_IsAuthenticated.htm">IsAuthenticated</a></td><td>
            Get or set whether the SASL mechanism has finished authenticating.
            <br />(Inherited from <a href="T_MailKit_Security_SaslMechanism.htm">SaslMechanism</a>)</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_MailKit_Security_SaslMechanismOAuthBearer_MechanismName.htm">MechanismName</a></td><td>
            Get the name of the SASL mechanism.
            <br />(Overrides <a href="P_MailKit_Security_SaslMechanism_MechanismName.htm">SaslMechanism<span id="LSTFA7BC422_3" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>MechanismName</a>)</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_MailKit_Security_SaslMechanism_NegotiatedChannelBinding.htm">NegotiatedChannelBinding</a></td><td>
            Get whether or not channel-binding was negotiated by the SASL mechanism.
            <br />(Inherited from <a href="T_MailKit_Security_SaslMechanism.htm">SaslMechanism</a>)</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_MailKit_Security_SaslMechanism_NegotiatedSecurityLayer.htm">NegotiatedSecurityLayer</a></td><td>
            Get whether or not a security layer was negotiated by the SASL mechanism.
            <br />(Inherited from <a href="T_MailKit_Security_SaslMechanism.htm">SaslMechanism</a>)</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_MailKit_Security_SaslMechanism_SupportsChannelBinding.htm">SupportsChannelBinding</a></td><td>
            Get whether or not the SASL mechanism supports channel binding.
            <br />(Inherited from <a href="T_MailKit_Security_SaslMechanism.htm">SaslMechanism</a>)</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_MailKit_Security_SaslMechanismOAuthBearer_SupportsInitialResponse.htm">SupportsInitialResponse</a></td><td>
            Get whether or not the mechanism supports an initial response (SASL-IR).
            <br />(Overrides <a href="P_MailKit_Security_SaslMechanism_SupportsInitialResponse.htm">SaslMechanism<span id="LSTFA7BC422_4" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>SupportsInitialResponse</a>)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBEA')" onkeypress="SectionExpandCollapse_CheckKey('IDBEA', event)" tabindex="0"><img id="IDBEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="IDBEASection" class="collapsibleSection"><table id="MethodList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_MailKit_Security_SaslMechanism_Challenge_1.htm">Challenge(String, CancellationToken)</a></td><td>
            Decode the base64-encoded server challenge and return the next challenge response encoded in base64.
            <br />(Inherited from <a href="T_MailKit_Security_SaslMechanism.htm">SaslMechanism</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_MailKit_Security_SaslMechanismOAuthBearer_Challenge.htm">Challenge(<span id="LSTFA7BC422_5" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LSTFA7BC422_6" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32, CancellationToken)</a></td><td>
            Parse the server's challenge token and return the next challenge response.
            <br />(Overrides <a href="M_MailKit_Security_SaslMechanism_Challenge.htm">SaslMechanism<span id="LSTFA7BC422_7" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Challenge(<span id="LSTFA7BC422_8" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LSTFA7BC422_9" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32, CancellationToken)</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_MailKit_Security_SaslMechanism_ChallengeAsync_1.htm">ChallengeAsync(String, CancellationToken)</a></td><td>
            Asynchronously decode the base64-encoded server challenge and return the next challenge response encoded in base64.
            <br />(Inherited from <a href="T_MailKit_Security_SaslMechanism.htm">SaslMechanism</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_MailKit_Security_SaslMechanism_ChallengeAsync.htm">ChallengeAsync(<span id="LSTFA7BC422_10" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LSTFA7BC422_11" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32, CancellationToken)</a></td><td>
            Asynchronously parse the server's challenge token and return the next challenge response.
            <br />(Inherited from <a href="T_MailKit_Security_SaslMechanism.htm">SaslMechanism</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noopener noreferrer">Equals</a></td><td><br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.finalize" target="_blank" rel="noopener noreferrer">Finalize</a></td><td><br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noopener noreferrer">GetHashCode</a></td><td><br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noopener noreferrer">GetType</a></td><td><br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone" target="_blank" rel="noopener noreferrer">MemberwiseClone</a></td><td><br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_MailKit_Security_SaslMechanism_Reset.htm">Reset</a></td><td>
            Reset the state of the SASL mechanism.
            <br />(Inherited from <a href="T_MailKit_Security_SaslMechanism.htm">SaslMechanism</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noopener noreferrer">ToString</a></td><td><br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_MailKit_Security_SaslMechanism_TryGetChannelBindingToken.htm">TryGetChannelBindingToken</a></td><td>
            Try to get a channel-binding token.
            <br />(Inherited from <a href="T_MailKit_Security_SaslMechanism.htm">SaslMechanism</a>)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDBCSection" class="collapsibleSection">
            A SASL mechanism that makes use of a short-lived OAuth Bearer access tokens.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDCC')" onkeypress="SectionExpandCollapse_CheckKey('IDCC', event)" tabindex="0"><img id="IDCCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDCCSection" class="collapsibleSection"><div id="IDACC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDACC_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDACC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDACC');return false;" title="Copy">Copy</a></div></div><div id="IDACC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.Threading;
<span class="highlight-keyword">using</span> System.Threading.Tasks;

<span class="highlight-keyword">using</span> Google.Apis.Util;
<span class="highlight-keyword">using</span> Google.Apis.Util.Store;
<span class="highlight-keyword">using</span> Google.Apis.Auth.OAuth2;
<span class="highlight-keyword">using</span> Google.Apis.Auth.OAuth2.Flows;

<span class="highlight-keyword">using</span> MailKit;
<span class="highlight-keyword">using</span> MailKit.Net.Imap;
<span class="highlight-keyword">using</span> MailKit.Security;

<span class="highlight-keyword">namespace</span> OAuth2GMailExample {
    <span class="highlight-keyword">class</span> Program
    {
        <span class="highlight-keyword">const</span> <span class="highlight-keyword">string</span> GMailAccount = <span class="highlight-literal">"username@gmail.com"</span>;

        <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Main (<span class="highlight-keyword">string</span>[] args)
        {
            <span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> client = <span class="highlight-keyword">new</span> ImapClient ()) {
                client.Connect (<span class="highlight-literal">"imap.gmail.com"</span>, <span class="highlight-number">993</span>, SecureSocketOptions.SslOnConnect);
                <span class="highlight-keyword">if</span> (client.AuthenticationMechanisms.Contains (<span class="highlight-literal">"OAUTHBEARER"</span>) || client.AuthenticationMechanisms.Contains (<span class="highlight-literal">"XOAUTH2"</span>))
                    AuthenticateAsync (client).GetAwaiter ().GetResult ();
                client.Disconnect (<span class="highlight-keyword">true</span>);
            }
        }

        <span class="highlight-keyword">static</span> <span class="highlight-keyword">async</span> Task AuthenticateAsync (ImapClient client)
        {
            <span class="highlight-keyword">var</span> clientSecrets = <span class="highlight-keyword">new</span> ClientSecrets {
                ClientId = <span class="highlight-literal">"XXX.apps.googleusercontent.com"</span>,
                ClientSecret = <span class="highlight-literal">"XXX"</span>
            };

            <span class="highlight-keyword">var</span> codeFlow = <span class="highlight-keyword">new</span> GoogleAuthorizationCodeFlow (<span class="highlight-keyword">new</span> GoogleAuthorizationCodeFlow.Initializer {
                DataStore = <span class="highlight-keyword">new</span> FileDataStore (<span class="highlight-literal">"CredentialCacheFolder"</span>, <span class="highlight-keyword">false</span>),
                Scopes = <span class="highlight-keyword">new</span> [] { <span class="highlight-literal">"https://mail.google.com/"</span> },
                ClientSecrets = clientSecrets
            });

            <span class="highlight-comment">// Note: For a web app, you'll want to use AuthorizationCodeWebApp instead.</span>
            <span class="highlight-keyword">var</span> codeReceiver = <span class="highlight-keyword">new</span> LocalServerCodeReceiver ();
            <span class="highlight-keyword">var</span> authCode = <span class="highlight-keyword">new</span> AuthorizationCodeInstalledApp (codeFlow, codeReceiver);

            <span class="highlight-keyword">var</span> credential = <span class="highlight-keyword">await</span> authCode.AuthorizeAsync (GMailAccount, CancellationToken.None);

            <span class="highlight-keyword">if</span> (credential.Token.IsStale)
                <span class="highlight-keyword">await</span> credential.RefreshTokenAsync (CancellationToken.None);

            <span class="highlight-comment">// Note: We use credential.UserId here instead of GMailAccount because the user *may* have chosen a</span>
            <span class="highlight-comment">// different GMail account when presented with the browser window during the authentication process.</span>
            SaslMechanism oauth2;

            <span class="highlight-keyword">if</span> (client.AuthenticationMechanisms.Contains (<span class="highlight-literal">"OAUTHBEARER"</span>))
                oauth2 = <span class="highlight-keyword">new</span> SaslMechanismOAuthBearer (credential.UserId, credential.Token.AccessToken);
            <span class="highlight-keyword">else</span>
                oauth2 = <span class="highlight-keyword">new</span> SaslMechanismOAuth2 (credential.UserId, credential.Token.AccessToken);

            <span class="highlight-keyword">await</span> client.AuthenticateAsync (oauth2);
        }
    }
}</pre></div></div></div><div id="IDBCC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDBCC_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDBCC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDBCC');return false;" title="Copy">Copy</a></div></div><div id="IDBCC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.Threading;
<span class="highlight-keyword">using</span> System.Threading.Tasks;

<span class="highlight-keyword">using</span> MailKit;
<span class="highlight-keyword">using</span> MailKit.Net.Imap;
<span class="highlight-keyword">using</span> MailKit.Security;

<span class="highlight-keyword">using</span> Microsoft.Identity.Client;

<span class="highlight-keyword">namespace</span> OAuth2ExchangeExample {
    <span class="highlight-keyword">class</span> Program
    {
        <span class="highlight-keyword">const</span> <span class="highlight-keyword">string</span> ExchangeAccount = <span class="highlight-literal">"username@office365.com"</span>;

        <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Main (<span class="highlight-keyword">string</span>[] args)
        {
            <span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> client = <span class="highlight-keyword">new</span> ImapClient ()) {
                client.Connect (<span class="highlight-literal">"outlook.office365.com"</span>, <span class="highlight-number">993</span>, SecureSocketOptions.SslOnConnect);
                <span class="highlight-keyword">if</span> (client.AuthenticationMechanisms.Contains (<span class="highlight-literal">"OAUTHBEARER"</span>) || client.AuthenticationMechanisms.Contains (<span class="highlight-literal">"XOAUTH2"</span>))
                    AuthenticateAsync (client).GetAwaiter ().GetResult ();
                client.Disconnect (<span class="highlight-keyword">true</span>);
            }
        }

        <span class="highlight-keyword">static</span> <span class="highlight-keyword">async</span> Task AuthenticateAsync (ImapClient client)
        {
            <span class="highlight-keyword">var</span> options = <span class="highlight-keyword">new</span> PublicClientApplicationOptions {
                ClientId = <span class="highlight-literal">"Application (client) ID"</span>,
                TenantId = <span class="highlight-literal">"Directory (tenant) ID"</span>,
                RedirectUri = <span class="highlight-literal">"https://login.microsoftonline.com/common/oauth2/nativeclient"</span>
            };

            <span class="highlight-keyword">var</span> publicClientApplication = PublicClientApplicationBuilder
                .CreateWithApplicationOptions (options)
                .Build ();

            <span class="highlight-keyword">var</span> scopes = <span class="highlight-keyword">new</span> <span class="highlight-keyword">string</span>[] {
                <span class="highlight-literal">"email"</span>,
                <span class="highlight-literal">"offline_access"</span>,
                <span class="highlight-literal">"https://outlook.office.com/IMAP.AccessAsUser.All"</span>, <span class="highlight-comment">// Only needed for IMAP</span>
                <span class="highlight-comment">//"https://outlook.office.com/POP.AccessAsUser.All",  // Only needed for POP</span>
                <span class="highlight-comment">//"https://outlook.office.com/SMTP.AccessAsUser.All", // Only needed for SMTP</span>
            };

            AuthenticationResult? result;

            <span class="highlight-keyword">try</span> {
                <span class="highlight-comment">// First, check the cache for an auth token.</span>
                result = <span class="highlight-keyword">await</span> publicClientApplication.AcquireTokenSilent (scopes, username).ExecuteAsync ();
            } <span class="highlight-keyword">catch</span> (MsalUiRequiredException) {
                <span class="highlight-comment">// If that fails, then try getting an auth token interactively.</span>
                result = <span class="highlight-keyword">await</span> publicClientApplication.AcquireTokenInteractive (scopes).WithLoginHint (username).ExecuteAsync ();
            }

            <span class="highlight-comment">// Note: We use result.Account.Username here instead of ExchangeAccount because the user *may* have chosen a</span>
            <span class="highlight-comment">// different Microsoft Exchange account when presented with the browser window during the authentication process.</span>
            SaslMechanism oauth2;

            <span class="highlight-keyword">if</span> (client.AuthenticationMechanisms.Contains (<span class="highlight-literal">"OAUTHBEARER"</span>))
                oauth2 = <span class="highlight-keyword">new</span> SaslMechanismOAuthBearer (result.Account.Username, result.AccessToken);
            <span class="highlight-keyword">else</span>
                oauth2 = <span class="highlight-keyword">new</span> SaslMechanismOAuth2 (result.Account.Username, result.AccessToken);

            <span class="highlight-keyword">await</span> client.AuthenticateAsync (oauth2);
        }
    }
}</pre></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="N_MailKit_Security.htm">MailKit.Security Namespace</a></div></div></div></div><div id="PageFooter" class="pageFooter"><!-- Global site tag (gtag.js) - Google Analytics -->
<script src="https://www.googletagmanager.com/gtag/js?id=UA-63841238-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-63841238-1');
</script><p><a href="https://github.com/jstedfast" target="_blank" rel="noopener noreferrer">Copyright © 2013-2025 Jeffrey Stedfast</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:jestedfa%40microsoft.com?Subject=MailKit%20Documentation">Jeffrey Stedfast</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script></div></body></html>