<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>ArcSigner Class</title><meta name="Title" content="ArcSigner Class" /><meta name="Microsoft.Help.Id" content="T:MimeKit.Cryptography.ArcSigner" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="MimeKit.Cryptography.ArcSigner class" /><meta name="System.Keywords" content="ArcSigner class" /><meta name="Microsoft.Help.F1" content="MimeKit.Cryptography.ArcSigner" /><meta name="Microsoft.Help.F1" content="ArcSigner" /><meta name="container" content="MimeKit.Cryptography" /><meta name="file" content="T_MimeKit_Cryptography_ArcSigner" /><meta name="guid" content="T_MimeKit_Cryptography_ArcSigner" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Description" content="An ARC signer." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">MailKit Documentation<form id="SearchForm" method="get" action="#" onsubmit="TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Introduction.htm" title="MailKit Documentation" tocid="roottoc">MailKit Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="API Reference" tocid="R_Project_Documentation">API Reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_MimeKit_Cryptography.htm" title="MimeKit.Cryptography" tocid="N_MimeKit_Cryptography">MimeKit.Cryptography</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_MimeKit_Cryptography_ArcSigner.htm" title="ArcSigner Class" tocid="T_MimeKit_Cryptography_ArcSigner">ArcSigner Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_MimeKit_Cryptography_ArcSigner__ctor.htm" title="ArcSigner Constructor" tocid="Overload_MimeKit_Cryptography_ArcSigner__ctor">ArcSigner Constructor</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/Properties_T_MimeKit_Cryptography_ArcSigner.htm" title="ArcSigner Properties" tocid="Properties_T_MimeKit_Cryptography_ArcSigner">ArcSigner Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_MimeKit_Cryptography_ArcSigner.htm" title="ArcSigner Methods" tocid="Methods_T_MimeKit_Cryptography_ArcSigner">ArcSigner Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="MimeKit" src="../icons/Help.png" /></td><td class="titleColumn"><h1>Arc<wbr />Signer Class</h1></td></tr></table><div class="summary">
            An ARC signer.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDA')" onkeypress="SectionExpandCollapse_CheckKey('IDDA', event)" tabindex="0"><img id="IDDAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="IDDASection" class="collapsibleSection"><a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">System<span id="LSTF0B5B947_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Object</a><br />  <a href="T_MimeKit_Cryptography_DkimSignerBase.htm">MimeKit.Cryptography<span id="LSTF0B5B947_1" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>DkimSignerBase</a><br />    <span class="selflink">MimeKit.Cryptography<span id="LSTF0B5B947_2" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>ArcSigner</span><br /></div><br /><strong>Namespace:</strong> <a href="N_MimeKit_Cryptography.htm">MimeKit.Cryptography</a><br /><strong>Assembly:</strong> MimeKit (in MimeKit.dll) Version: 4.0.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="identifier">ArcSigner</span> : <span class="identifier">DkimSignerBase</span></pre></div></div></div><a id="HT_RequestExampleLink" href="https://github.com/jstedfast/MailKit/issues/new" target="_blank" rel="noopener noreferrer" class="button" title="Request an example for this topic">Request Example</a>
		<script type="text/javascript">
		var HT_requestExampleLink = document.getElementById("HT_RequestExampleLink");
				
		if(HT_requestExampleLink.href.substring(0, 4).toLowerCase() == "http")
			HT_requestExampleLink.href += "?title=";
		else
			HT_requestExampleLink.href += "?subject=MailKit%20Documentation: ";

		HT_requestExampleLink.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
			encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
			"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		</script></div><p>The <span class="selflink">ArcSigner</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDAAEA')" onkeypress="SectionExpandCollapse_CheckKey('IDAAEA', event)" tabindex="0"><img id="IDAAEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="IDAAEASection" class="collapsibleSection"><table id="ConstructorList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_MimeKit_Cryptography_ArcSigner__ctor_2.htm">ArcSigner(String, String, DkimSignatureAlgorithm)</a></td><td>
            Initialize a new instance of the <span class="selflink">ArcSigner</span> class.
            </td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_MimeKit_Cryptography_ArcSigner__ctor.htm">ArcSigner(AsymmetricKeyParameter, String, String, DkimSignatureAlgorithm)</a></td><td>
            Initialize a new instance of the <span class="selflink">ArcSigner</span> class.
            </td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_MimeKit_Cryptography_ArcSigner__ctor_1.htm">ArcSigner(Stream, String, String, DkimSignatureAlgorithm)</a></td><td>
            Initialize a new instance of the <span class="selflink">ArcSigner</span> class.
            </td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected method" title="Protected method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_MimeKit_Cryptography_ArcSigner__ctor_3.htm">ArcSigner(String, String, String, DkimSignatureAlgorithm)</a></td><td>
            Initialize a new instance of the <span class="selflink">ArcSigner</span> class.
            </td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDNEA')" onkeypress="SectionExpandCollapse_CheckKey('IDNEA', event)" tabindex="0"><img id="IDNEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="IDNEASection" class="collapsibleSection"><table id="PropertyList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="P_MimeKit_Cryptography_DkimSignerBase_BodyCanonicalizationAlgorithm.htm">BodyCanonicalizationAlgorithm</a></td><td>
            Get or set the canonicalization algorithm to use for the message body.
            <br />(Inherited from <a href="T_MimeKit_Cryptography_DkimSignerBase.htm">DkimSignerBase</a>)</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="P_MimeKit_Cryptography_DkimSignerBase_Domain.htm">Domain</a></td><td>
            Get the domain that the signer represents.
            <br />(Inherited from <a href="T_MimeKit_Cryptography_DkimSignerBase.htm">DkimSignerBase</a>)</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="P_MimeKit_Cryptography_DkimSignerBase_HeaderCanonicalizationAlgorithm.htm">HeaderCanonicalizationAlgorithm</a></td><td>
            Get or set the canonicalization algorithm to use for the message headers.
            <br />(Inherited from <a href="T_MimeKit_Cryptography_DkimSignerBase.htm">DkimSignerBase</a>)</td></tr><tr><td><img src="../icons/protProperty.gif" alt="Protected property" title="Protected property" /></td><td><a href="P_MimeKit_Cryptography_DkimSignerBase_PrivateKey.htm">PrivateKey</a></td><td>
            Gets the private key.
            <br />(Inherited from <a href="T_MimeKit_Cryptography_DkimSignerBase.htm">DkimSignerBase</a>)</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="P_MimeKit_Cryptography_DkimSignerBase_Selector.htm">Selector</a></td><td>
            Get the selector subdividing the domain.
            <br />(Inherited from <a href="T_MimeKit_Cryptography_DkimSignerBase.htm">DkimSignerBase</a>)</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="P_MimeKit_Cryptography_DkimSignerBase_SignatureAlgorithm.htm">SignatureAlgorithm</a></td><td>
            Get or set the algorithm to use for signing.
            <br />(Inherited from <a href="T_MimeKit_Cryptography_DkimSignerBase.htm">DkimSignerBase</a>)</td></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_MimeKit_Cryptography_DkimSignerBase_SignaturesExpireAfter.htm">SignaturesExpireAfter</a></td><td>
            Get or set the timespan after which signatures are no longer valid.
            <br />(Inherited from <a href="T_MimeKit_Cryptography_DkimSignerBase.htm">DkimSignerBase</a>)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBEA')" onkeypress="SectionExpandCollapse_CheckKey('IDBEA', event)" tabindex="0"><img id="IDBEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="IDBEASection" class="collapsibleSection"><table id="MethodList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_MimeKit_Cryptography_DkimSignerBase_CreateSigningContext.htm">CreateSigningContext</a></td><td>
            Create the digest signing context.
            <br />(Inherited from <a href="T_MimeKit_Cryptography_DkimSignerBase.htm">DkimSignerBase</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.equals#System_Object_Equals_System_Object_" target="_blank" rel="noopener noreferrer">Equals</a></td><td>Determines whether the specified object is equal to the current object.<br />(Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.finalize#System_Object_Finalize" target="_blank" rel="noopener noreferrer">Finalize</a></td><td>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.<br />(Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected method" title="Protected method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_MimeKit_Cryptography_ArcSigner_GenerateArcAuthenticationResults.htm">GenerateArcAuthenticationResults</a></td><td>
            Generate an ARC-Authentication-Results header.
            </td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected method" title="Protected method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_MimeKit_Cryptography_ArcSigner_GenerateArcAuthenticationResultsAsync.htm">GenerateArcAuthenticationResultsAsync</a></td><td>
            Asynchronously generate an ARC-Authentication-Results header.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.gethashcode#System_Object_GetHashCode" target="_blank" rel="noopener noreferrer">GetHashCode</a></td><td>Serves as the default hash function.<br />(Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_MimeKit_Cryptography_ArcSigner_GetTimestamp.htm">GetTimestamp</a></td><td>
            Get the timestamp value.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.gettype#System_Object_GetType" target="_blank" rel="noopener noreferrer">GetType</a></td><td>Gets the <a href="https://docs.microsoft.com/dotnet/api/system.type" target="_blank" rel="noopener noreferrer">Type</a> of the current instance.<br />(Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.memberwiseclone#System_Object_MemberwiseClone" target="_blank" rel="noopener noreferrer">MemberwiseClone</a></td><td>Creates a shallow copy of the current <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>.<br />(Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_MimeKit_Cryptography_ArcSigner_Sign_2.htm">Sign(MimeMessage, IList<span id="LSTF0B5B947_3" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>HeaderId<span id="LSTF0B5B947_4" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, CancellationToken)</a></td><td>
            Digitally sign and seal a message using ARC.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_MimeKit_Cryptography_ArcSigner_Sign_3.htm">Sign(MimeMessage, IList<span id="LSTF0B5B947_5" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>String<span id="LSTF0B5B947_6" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, CancellationToken)</a></td><td>
            Digitally sign and seal a message using ARC.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_MimeKit_Cryptography_ArcSigner_Sign.htm">Sign(FormatOptions, MimeMessage, IList<span id="LSTF0B5B947_7" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>HeaderId<span id="LSTF0B5B947_8" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, CancellationToken)</a></td><td>
            Digitally sign and seal a message using ARC.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_MimeKit_Cryptography_ArcSigner_Sign_1.htm">Sign(FormatOptions, MimeMessage, IList<span id="LSTF0B5B947_9" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>String<span id="LSTF0B5B947_10" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, CancellationToken)</a></td><td>
            Digitally sign and seal a message using ARC.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_MimeKit_Cryptography_ArcSigner_SignAsync_2.htm">SignAsync(MimeMessage, IList<span id="LSTF0B5B947_11" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>HeaderId<span id="LSTF0B5B947_12" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, CancellationToken)</a></td><td>
            Asynchronously digitally sign and seal a message using ARC.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_MimeKit_Cryptography_ArcSigner_SignAsync_3.htm">SignAsync(MimeMessage, IList<span id="LSTF0B5B947_13" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>String<span id="LSTF0B5B947_14" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, CancellationToken)</a></td><td>
            Asynchronously digitally sign and seal a message using ARC.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_MimeKit_Cryptography_ArcSigner_SignAsync.htm">SignAsync(FormatOptions, MimeMessage, IList<span id="LSTF0B5B947_15" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>HeaderId<span id="LSTF0B5B947_16" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, CancellationToken)</a></td><td>
            Asynchronously digitally sign and seal a message using ARC.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_MimeKit_Cryptography_ArcSigner_SignAsync_1.htm">SignAsync(FormatOptions, MimeMessage, IList<span id="LSTF0B5B947_17" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>String<span id="LSTF0B5B947_18" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, CancellationToken)</a></td><td>
            Asynchronously digitally sign and seal a message using ARC.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.tostring#System_Object_ToString" target="_blank" rel="noopener noreferrer">ToString</a></td><td>Returns a string that represents the current object.<br />(Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDBCSection" class="collapsibleSection">
            An ARC signer.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDCC')" onkeypress="SectionExpandCollapse_CheckKey('IDCC', event)" tabindex="0"><img id="IDCCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDCCSection" class="collapsibleSection"><div id="IDACC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDACC_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDACC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDACC');return false;" title="Copy">Copy</a></div></div><div id="IDACC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.IO;
<span class="highlight-keyword">using</span> System.Text;
<span class="highlight-keyword">using</span> System.Threading;
<span class="highlight-keyword">using</span> System.Threading.Tasks;
<span class="highlight-keyword">using</span> System.Collections.Generic;

<span class="highlight-keyword">using</span> MimeKit;
<span class="highlight-keyword">using</span> MimeKit.Cryptography;

<span class="highlight-keyword">namespace</span> ArcSignerExample
{
    <span class="highlight-keyword">class</span> ExampleArcSigner : ArcSigner
    {
        <span class="highlight-keyword">public</span> ExampleArcSigner (Stream stream, <span class="highlight-keyword">string</span> domain, <span class="highlight-keyword">string</span> selector, DkimSignatureAlgorithm algorithm = DkimSignatureAlgorithm.RsaSha256) : <span class="highlight-keyword">base</span> (stream, domain, selector, algorithm)
        {
        }

        <span class="highlight-keyword">public</span> ExampleArcSigner (<span class="highlight-keyword">string</span> fileName, <span class="highlight-keyword">string</span> domain, <span class="highlight-keyword">string</span> selector, DkimSignatureAlgorithm algorithm = DkimSignatureAlgorithm.RsaSha256) : <span class="highlight-keyword">base</span> (fileName, domain, selector, algorithm)
        {
        }

        <span class="highlight-keyword">public</span> ExampleArcSigner (AsymmetricKeyParameter key, <span class="highlight-keyword">string</span> domain, <span class="highlight-keyword">string</span> selector, DkimSignatureAlgorithm algorithm = DkimSignatureAlgorithm.RsaSha256) : <span class="highlight-keyword">base</span> (key, domain, selector, algorithm)
        {
        }

        <span class="highlight-keyword">public</span> <span class="highlight-keyword">string</span> AuthenticationServiceIdentifier {
            <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>;
        }

        <span class="highlight-comment">/// &lt;summary&gt;</span>
        <span class="highlight-comment">/// Generate the ARC-Authentication-Results header.</span>
        <span class="highlight-comment">/// &lt;/summary&gt;</span>
        <span class="highlight-comment">/// &lt;remarks&gt;</span>
        <span class="highlight-comment">/// The ARC-Authentication-Results header contains information detailing the results of</span>
        <span class="highlight-comment">/// authenticating/verifying the message via ARC, DKIM, SPF, etc.</span>
        <span class="highlight-comment">///</span>
        <span class="highlight-comment">/// In the following implementation, we assume that all of these authentication results</span>
        <span class="highlight-comment">/// have already been determined by other mail software that has added some Authentication-Results</span>
        <span class="highlight-comment">/// headers containing this information.</span>
        <span class="highlight-comment">///</span>
        <span class="highlight-comment">/// Note: This method is used when ArcSigner.Sign() is called instead of ArcSigner.SignAsync().</span>
        <span class="highlight-comment">/// &lt;/remarks&gt;</span>
        <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> AuthenticationResults GenerateArcAuthenticationResults (FormatOptions options, MimeMessage message, CancellationToken cancellationToken)
        {
            <span class="highlight-keyword">var</span> results = <span class="highlight-keyword">new</span> AuthenticationResults (AuthenticationServiceIdentifier);

            <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> i = <span class="highlight-number">0</span>; i &lt; message.Headers.Count; i++) {
                <span class="highlight-keyword">var</span> header = message.Headers[i];

                <span class="highlight-keyword">if</span> (header.Id != HeaderId.AuthenticationResults)
                    <span class="highlight-keyword">continue</span>;

                <span class="highlight-keyword">if</span> (!AuthenticationResults.TryParse (header.RawValue, <span class="highlight-keyword">out</span> AuthenticationResults authres))
                    <span class="highlight-keyword">continue</span>;

                <span class="highlight-keyword">if</span> (authres.AuthenticationServiceIdentifier != AuthenticationServiceIdentifier)
                    <span class="highlight-keyword">continue</span>;

                <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> result <span class="highlight-keyword">in</span> authres.Results) {
                    <span class="highlight-keyword">if</span> (!results.Results.Any (r =&gt; r.Method == result.Method))
                        results.Results.Add (result);
                }
            }

            <span class="highlight-keyword">return</span> results;
        }

        <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> Task&lt;AuthenticationResults&gt; GenerateArcAuthenticationResultsAsync (FormatOptions options, MimeMessage message, CancellationToken cancellationToken)
        {
            <span class="highlight-keyword">return</span> Task.FromResult (GenerateArcAuthenticationResults (options, message, cancellationToken));
        }
    }

    <span class="highlight-keyword">class</span> Program
    {
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Main (<span class="highlight-keyword">string</span>[] args)
        {
            <span class="highlight-keyword">if</span> (args.Length &lt; <span class="highlight-number">2</span>) {
                Help ();
                <span class="highlight-keyword">return</span>;
            }

            <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> i = <span class="highlight-number">0</span>; i &lt; args.Length; i++) {
                <span class="highlight-keyword">if</span> (args[i] == <span class="highlight-literal">"--help"</span>) {
                    Help ();
                    <span class="highlight-keyword">return</span>;
                }
            }

            <span class="highlight-keyword">var</span> headers = <span class="highlight-keyword">new</span> HeaderId[] { HeaderId.From, HeaderId.Subject, HeaderId.Date };
            <span class="highlight-keyword">var</span> signer = <span class="highlight-keyword">new</span> ExampleArcSigner (<span class="highlight-literal">"privatekey.pem"</span>, <span class="highlight-literal">"example.com"</span>, <span class="highlight-literal">"brisbane"</span>, DkimSignatureAlgorithm.RsaSha256) {
                HeaderCanonicalizationAlgorithm = DkimCanonicalizationAlgorithm.Simple,
                BodyCanonicalizationAlgorithm = DkimCanonicalizationAlgorithm.Simple,
                AgentOrUserIdentifier = <span class="highlight-literal">"@eng.example.com"</span>,
            };

            <span class="highlight-keyword">if</span> (!File.Exists (args[<span class="highlight-number">0</span>])) {
                Console.Error.WriteLine (<span class="highlight-literal">"{0}: No such file."</span>, args[<span class="highlight-number">0</span>]);
                <span class="highlight-keyword">return</span>;
            }

            <span class="highlight-keyword">var</span> message = MimeMessage.Load (args[<span class="highlight-number">0</span>]);

            <span class="highlight-comment">// Prepare the message body to be sent over a 7bit transport (such as older versions of SMTP).</span>
            <span class="highlight-comment">// Note: If the SMTP server you will be sending the message over supports the 8BITMIME extension,</span>
            <span class="highlight-comment">// then you can use `EncodingConstraint.EightBit` instead.</span>
            message.Prepare (EncodingConstraint.SevenBit);

            signer.Sign (message, headers);

            <span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> stream = File.Create (args[<span class="highlight-number">1</span>]))
                message.WriteTo (stream);
        }

        <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Help ()
        {
            Console.WriteLine (<span class="highlight-literal">"Usage is: ArcSigner [options] [message] [output]"</span>);
            Console.WriteLine ();
            Console.WriteLine (<span class="highlight-literal">"Options:"</span>);
            Console.WriteLine (<span class="highlight-literal">"  --help               This help menu."</span>);
        }
    }
}</pre></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="N_MimeKit_Cryptography.htm">MimeKit.Cryptography Namespace</a></div></div></div></div><div id="PageFooter" class="pageFooter"><!-- Global site tag (gtag.js) - Google Analytics -->
<script src="https://www.googletagmanager.com/gtag/js?id=UA-63841238-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-63841238-1');
</script><p><a href="https://github.com/jstedfast" target="_blank" rel="noopener noreferrer">Copyright © 2013-2023 Jeffrey Stedfast</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:jestedfa%40microsoft.com?Subject=MailKit%20Documentation">Jeffrey Stedfast</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script></div></body></html>