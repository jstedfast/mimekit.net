<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>IMailFolder.GetStreamAsync(UniqueId, String, CancellationToken, ITransferProgress) Method</title><meta name="Title" content="GetStreamAsync(UniqueId, String, CancellationToken, ITransferProgress) Method" /><meta name="Microsoft.Help.Id" content="M:MailKit.IMailFolder.GetStreamAsync(MailKit.UniqueId,System.String,System.Threading.CancellationToken,MailKit.ITransferProgress)" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="container" content="MailKit" /><meta name="file" content="M_MailKit_IMailFolder_GetStreamAsync_4" /><meta name="guid" content="M_MailKit_IMailFolder_GetStreamAsync_4" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Description" content="Asynchronously get a substream of the specified message." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">MailKit Documentation<form id="SearchForm" method="get" action="#" onsubmit="TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Introduction.htm" title="MailKit Documentation" tocid="roottoc">MailKit Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="API Reference" tocid="R_Project_Documentation">API Reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_MailKit.htm" title="MailKit" tocid="N_MailKit">MailKit</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_MailKit_IMailFolder.htm" title="IMailFolder Interface" tocid="T_MailKit_IMailFolder">IMailFolder Interface</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_MailKit_IMailFolder.htm" title="IMailFolder Methods" tocid="Methods_T_MailKit_IMailFolder">IMailFolder Methods</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_MailKit_IMailFolder_GetStreamAsync.htm" title="GetStreamAsync Method" tocid="Overload_MailKit_IMailFolder_GetStreamAsync">GetStreamAsync Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MailKit_IMailFolder_GetStreamAsync_11.htm" title="GetStreamAsync(Int32, CancellationToken, ITransferProgress) Method" tocid="M_MailKit_IMailFolder_GetStreamAsync_11">GetStreamAsync(Int32, CancellationToken, ITransferProgress) Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MailKit_IMailFolder_GetStreamAsync_5.htm" title="GetStreamAsync(UniqueId, CancellationToken, ITransferProgress) Method" tocid="M_MailKit_IMailFolder_GetStreamAsync_5">GetStreamAsync(UniqueId, CancellationToken, ITransferProgress) Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MailKit_IMailFolder_GetStreamAsync_7.htm" title="GetStreamAsync(Int32, BodyPart, CancellationToken, ITransferProgress) Method" tocid="M_MailKit_IMailFolder_GetStreamAsync_7">GetStreamAsync(Int32, BodyPart, CancellationToken, ITransferProgress) Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MailKit_IMailFolder_GetStreamAsync_10.htm" title="GetStreamAsync(Int32, String, CancellationToken, ITransferProgress) Method" tocid="M_MailKit_IMailFolder_GetStreamAsync_10">GetStreamAsync(Int32, String, CancellationToken, ITransferProgress) Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MailKit_IMailFolder_GetStreamAsync_1.htm" title="GetStreamAsync(UniqueId, BodyPart, CancellationToken, ITransferProgress) Method" tocid="M_MailKit_IMailFolder_GetStreamAsync_1">GetStreamAsync(UniqueId, BodyPart, CancellationToken, ITransferProgress) Method</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MailKit_IMailFolder_GetStreamAsync_4.htm" title="GetStreamAsync(UniqueId, String, CancellationToken, ITransferProgress) Method" tocid="M_MailKit_IMailFolder_GetStreamAsync_4">GetStreamAsync(UniqueId, String, CancellationToken, ITransferProgress) Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MailKit_IMailFolder_GetStreamAsync_8.htm" title="GetStreamAsync(Int32, Int32, Int32, CancellationToken, ITransferProgress) Method" tocid="M_MailKit_IMailFolder_GetStreamAsync_8">GetStreamAsync(Int32, Int32, Int32, CancellationToken, ITransferProgress) Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MailKit_IMailFolder_GetStreamAsync_2.htm" title="GetStreamAsync(UniqueId, Int32, Int32, CancellationToken, ITransferProgress) Method" tocid="M_MailKit_IMailFolder_GetStreamAsync_2">GetStreamAsync(UniqueId, Int32, Int32, CancellationToken, ITransferProgress) Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MailKit_IMailFolder_GetStreamAsync_6.htm" title="GetStreamAsync(Int32, BodyPart, Int32, Int32, CancellationToken, ITransferProgress) Method" tocid="M_MailKit_IMailFolder_GetStreamAsync_6">GetStreamAsync(Int32, BodyPart, Int32, Int32, CancellationToken, ITransferProgress) Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MailKit_IMailFolder_GetStreamAsync_9.htm" title="GetStreamAsync(Int32, String, Int32, Int32, CancellationToken, ITransferProgress) Method" tocid="M_MailKit_IMailFolder_GetStreamAsync_9">GetStreamAsync(Int32, String, Int32, Int32, CancellationToken, ITransferProgress) Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MailKit_IMailFolder_GetStreamAsync.htm" title="GetStreamAsync(UniqueId, BodyPart, Int32, Int32, CancellationToken, ITransferProgress) Method" tocid="M_MailKit_IMailFolder_GetStreamAsync">GetStreamAsync(UniqueId, BodyPart, Int32, Int32, CancellationToken, ITransferProgress) Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MailKit_IMailFolder_GetStreamAsync_3.htm" title="GetStreamAsync(UniqueId, String, Int32, Int32, CancellationToken, ITransferProgress) Method" tocid="M_MailKit_IMailFolder_GetStreamAsync_3">GetStreamAsync(UniqueId, String, Int32, Int32, CancellationToken, ITransferProgress) Method</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="MimeKit" src="../icons/Help.png" /></td><td class="titleColumn"><h1>IMail<wbr />Folder<span id="LSTD6AA3596_0" data-languageSpecificText="cpp=::|nu=."></span>Get<wbr />Stream<wbr />Async(Unique<wbr />Id, String, Cancellation<wbr />Token, ITransfer<wbr />Progress) Method</h1></td></tr></table><div class="summary">
            Asynchronously get a substream of the specified message.
            </div><br /><strong>Namespace:</strong> <a href="N_MailKit.htm">MailKit</a><br /><strong>Assembly:</strong> MailKit (in MailKit.dll) Version: 4.7.1<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="identifier">Task</span>&lt;<span class="identifier">Stream</span>&gt; <span class="identifier">GetStreamAsync</span>(
	<span class="identifier">UniqueId</span> <span class="parameter">uid</span>,
	<span class="identifier">string</span> <span class="parameter">section</span>,
	<span class="identifier">CancellationToken</span> <span class="parameter">cancellationToken</span> = <span class="keyword">default</span>,
	<span class="identifier">ITransferProgress</span> <span class="parameter">progress</span> = <span class="keyword">null</span>
)</pre></div></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">uid</span>  <a href="T_MailKit_UniqueId.htm">UniqueId</a></dt><dd>The UID of the message.</dd><dt class="has-text-weight-normal"><span class="parameter">section</span>  <a href="https://docs.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a></dt><dd>The desired section of the message.</dd><dt class="has-text-weight-normal"><span class="parameter">cancellationToken</span>  <a href="https://docs.microsoft.com/dotnet/api/system.threading.cancellationtoken" target="_blank" rel="noopener noreferrer">CancellationToken</a>  (Optional)</dt><dd>The cancellation token.</dd><dt class="has-text-weight-normal"><span class="parameter">progress</span>  <a href="T_MailKit_ITransferProgress.htm">ITransferProgress</a>  (Optional)</dt><dd>The progress reporting mechanism.</dd></dl><h4>Return Value</h4><a href="https://docs.microsoft.com/dotnet/api/system.threading.tasks.task-1" target="_blank" rel="noopener noreferrer">Task</a><span id="LSTD6AA3596_1" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://docs.microsoft.com/dotnet/api/system.io.stream" target="_blank" rel="noopener noreferrer">Stream</a><span id="LSTD6AA3596_2" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><br />The stream.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDBCSection" class="collapsibleSection"><p>Asynchronously gets a substream of the specified message.</p><p>For more information about how to construct the <span class="parameter">section</span>,
            see Section 6.4.5 of RFC3501.</p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDCC')" onkeypress="SectionExpandCollapse_CheckKey('IDCC', event)" tabindex="0"><img id="IDCCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDCCSection" class="collapsibleSection"><div id="IDACC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDACC_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDACC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDACC');return false;" title="Copy">Copy</a></div></div><div id="IDACC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> SaveAttachments (<span class="highlight-keyword">string</span> baseDirectory)
{
    <span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> client = <span class="highlight-keyword">new</span> ImapClient ()) {
        client.Connect (<span class="highlight-literal">"imap.gmail.com"</span>, <span class="highlight-number">993</span>, SecureSocketOptions.SslOnConnect);

        client.Authenticate (<span class="highlight-literal">"username"</span>, <span class="highlight-literal">"password"</span>);

        client.Inbox.Open (FolderAccess.ReadOnly);

        <span class="highlight-comment">// search for messages where the Subject header contains either "MimeKit" or "MailKit"</span>
        <span class="highlight-keyword">var</span> query = SearchQuery.SubjectContains (<span class="highlight-literal">"MimeKit"</span>).Or (SearchQuery.SubjectContains (<span class="highlight-literal">"MailKit"</span>));
        <span class="highlight-keyword">var</span> uids = client.Inbox.Search (query);

        <span class="highlight-comment">// fetch summary information for the search results (we will want the UID and the BODYSTRUCTURE</span>
        <span class="highlight-comment">// of each message so that we can extract the text body and the attachments)</span>
        <span class="highlight-keyword">var</span> items = client.Inbox.Fetch (uids, MessageSummaryItems.UniqueId | MessageSummaryItems.BodyStructure);

        <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> item <span class="highlight-keyword">in</span> items) {
            <span class="highlight-comment">// determine a directory to save stuff in</span>
            <span class="highlight-keyword">var</span> directory = Path.Combine (baseDirectory, item.UniqueId.ToString ());

            <span class="highlight-comment">// create the directory</span>
            Directory.CreateDirectory (directory);

            <span class="highlight-comment">// now iterate over all of the attachments and decode/save the content to disk</span>
            <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> attachment <span class="highlight-keyword">in</span> item.Attachments) {
                <span class="highlight-comment">// default to using the sending client's suggested fileName value</span>
                <span class="highlight-keyword">string</span> fileName = attachment.FileName;

                <span class="highlight-keyword">if</span> (<span class="highlight-keyword">string</span>.IsNullOrEmpty (fileName)) {
                    <span class="highlight-comment">// the FileName wasn't defined, so generate one...</span>
                    <span class="highlight-keyword">if</span> (!MimeTypes.TryGetExtension (attachment.ContentType.MimeType, <span class="highlight-keyword">out</span> <span class="highlight-keyword">string</span> extension))
                        extension = <span class="highlight-literal">".dat"</span>;

                    fileName = Guid.NewGuid ().ToString () + extension;
                }

                <span class="highlight-comment">// we'll need the Content-Transfer-Encoding value so that we can decode it...</span>
                ContentEncoding encoding;

                <span class="highlight-keyword">if</span> (<span class="highlight-keyword">string</span>.IsNullOrEmpty (attachment.ContentTransferEncoding) || !MimeUtils.TryParse (attachment.ContentTransferEncoding, <span class="highlight-keyword">out</span> encoding))
                    encoding = ContentEncoding.Default;

                <span class="highlight-comment">// if all we want is the content (rather than the entire MIME part including the headers), then</span>
                <span class="highlight-comment">// we want the ".TEXT" section of the part</span>
                <span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> stream = client.Inbox.GetStream (item.UniqueId, attachment.PartSpecifier + <span class="highlight-literal">".TEXT"</span>)) {
                    <span class="highlight-comment">// wrap the attachment content in a MimeContent object to help us decode it</span>
                    <span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> content = <span class="highlight-keyword">new</span> MimeContent (stream, encoding)) {
                        <span class="highlight-keyword">var</span> path = Path.Combine (directory, fileName);

                        <span class="highlight-comment">// decode the attachment content to the file stream</span>
                        <span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> output = File.Create (path))
                            content.DecodeTo (output);
                    }
                }
            }
        }

        client.Disconnect (<span class="highlight-keyword">true</span>);
    }
}</pre></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="T_MailKit_IMailFolder.htm">IMailFolder Interface</a></div><div><a href="Overload_MailKit_IMailFolder_GetStreamAsync.htm">GetStreamAsync Overload</a></div><div><a href="N_MailKit.htm">MailKit Namespace</a></div></div></div></div><div id="PageFooter" class="pageFooter"><!-- Global site tag (gtag.js) - Google Analytics -->
<script src="https://www.googletagmanager.com/gtag/js?id=UA-63841238-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-63841238-1');
</script><p><a href="https://github.com/jstedfast" target="_blank" rel="noopener noreferrer">Copyright © 2013-2023 Jeffrey Stedfast</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:jestedfa%40microsoft.com?Subject=MailKit%20Documentation">Jeffrey Stedfast</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script></div></body></html>