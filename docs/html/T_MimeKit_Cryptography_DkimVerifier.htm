<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>DkimVerifier Class</title><meta name="Title" content="DkimVerifier Class" /><meta name="Microsoft.Help.Id" content="T:MimeKit.Cryptography.DkimVerifier" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="MimeKit.Cryptography.DkimVerifier class" /><meta name="System.Keywords" content="DkimVerifier class" /><meta name="Microsoft.Help.F1" content="MimeKit.Cryptography.DkimVerifier" /><meta name="Microsoft.Help.F1" content="DkimVerifier" /><meta name="container" content="MimeKit.Cryptography" /><meta name="file" content="T_MimeKit_Cryptography_DkimVerifier" /><meta name="guid" content="T_MimeKit_Cryptography_DkimVerifier" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Description" content="A DKIM-Signature verifier." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">MailKit Documentation<form id="SearchForm" method="get" action="#" onsubmit="TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Introduction.htm" title="MailKit Documentation" tocid="roottoc">MailKit Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="API Reference" tocid="R_Project_Documentation">API Reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_MimeKit_Cryptography.htm" title="MimeKit.Cryptography" tocid="N_MimeKit_Cryptography">MimeKit.Cryptography</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_MimeKit_Cryptography_DkimVerifier.htm" title="DkimVerifier Class" tocid="T_MimeKit_Cryptography_DkimVerifier">DkimVerifier Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MimeKit_Cryptography_DkimVerifier__ctor.htm" title="DkimVerifier Constructor" tocid="M_MimeKit_Cryptography_DkimVerifier__ctor">DkimVerifier Constructor</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/Properties_T_MimeKit_Cryptography_DkimVerifier.htm" title="DkimVerifier Properties" tocid="Properties_T_MimeKit_Cryptography_DkimVerifier">DkimVerifier Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_MimeKit_Cryptography_DkimVerifier.htm" title="DkimVerifier Methods" tocid="Methods_T_MimeKit_Cryptography_DkimVerifier">DkimVerifier Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="MimeKit" src="../icons/Help.png" /></td><td class="titleColumn"><h1>Dkim<wbr />Verifier Class</h1></td></tr></table><div class="summary">
            A DKIM-Signature verifier.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDA')" onkeypress="SectionExpandCollapse_CheckKey('IDDA', event)" tabindex="0"><img id="IDDAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="IDDASection" class="collapsibleSection"><a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">System<span id="LST4F36BCBD_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Object</a><br />  <a href="T_MimeKit_Cryptography_DkimVerifierBase.htm">MimeKit.Cryptography<span id="LST4F36BCBD_1" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>DkimVerifierBase</a><br />    <span class="selflink">MimeKit.Cryptography<span id="LST4F36BCBD_2" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>DkimVerifier</span><br /></div><br /><strong>Namespace:</strong> <a href="N_MimeKit_Cryptography.htm">MimeKit.Cryptography</a><br /><strong>Assembly:</strong> MimeKit (in MimeKit.dll) Version: 4.0.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">DkimVerifier</span> : <span class="identifier">DkimVerifierBase</span></pre></div></div></div><a id="HT_RequestExampleLink" href="https://github.com/jstedfast/MailKit/issues/new" target="_blank" rel="noopener noreferrer" class="button" title="Request an example for this topic">Request Example</a>
		<script type="text/javascript">
		var HT_requestExampleLink = document.getElementById("HT_RequestExampleLink");
				
		if(HT_requestExampleLink.href.substring(0, 4).toLowerCase() == "http")
			HT_requestExampleLink.href += "?title=";
		else
			HT_requestExampleLink.href += "?subject=MailKit%20Documentation: ";

		HT_requestExampleLink.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
			encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
			"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		</script></div><p>The <span class="selflink">DkimVerifier</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDAEA')" onkeypress="SectionExpandCollapse_CheckKey('IDAEA', event)" tabindex="0"><img id="IDAEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="IDAEASection" class="collapsibleSection"><table id="ConstructorList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_MimeKit_Cryptography_DkimVerifier__ctor.htm">DkimVerifier</a></td><td>
            Initialize a new instance of the <span class="selflink">DkimVerifier</span> class.
            </td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDNEA')" onkeypress="SectionExpandCollapse_CheckKey('IDNEA', event)" tabindex="0"><img id="IDNEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="IDNEASection" class="collapsibleSection"><table id="PropertyList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubProperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_MimeKit_Cryptography_DkimVerifierBase_MinimumRsaKeyLength.htm">MinimumRsaKeyLength</a></td><td>
            Get or set the minimum allowed RSA key length.
            <br />(Inherited from <a href="T_MimeKit_Cryptography_DkimVerifierBase.htm">DkimVerifierBase</a>)</td></tr><tr><td><img src="../icons/protProperty.gif" alt="Protected property" title="Protected property" /></td><td><a href="P_MimeKit_Cryptography_DkimVerifierBase_PublicKeyLocator.htm">PublicKeyLocator</a></td><td>
            Get the public key locator.
            <br />(Inherited from <a href="T_MimeKit_Cryptography_DkimVerifierBase.htm">DkimVerifierBase</a>)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDDEA')" onkeypress="SectionExpandCollapse_CheckKey('IDDEA', event)" tabindex="0"><img id="IDDEAToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="IDDEASection" class="collapsibleSection"><table id="MethodList" class="members"><tr><th class="iconColumn"> </th><th>Name</th><th>Description</th></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_MimeKit_Cryptography_DkimVerifierBase_Disable.htm">Disable</a></td><td>
            Disable a DKIM signature algorithm.
            <br />(Inherited from <a href="T_MimeKit_Cryptography_DkimVerifierBase.htm">DkimVerifierBase</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_MimeKit_Cryptography_DkimVerifierBase_Enable.htm">Enable</a></td><td>
            Enable a DKIM signature algorithm.
            <br />(Inherited from <a href="T_MimeKit_Cryptography_DkimVerifierBase.htm">DkimVerifierBase</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.equals#System_Object_Equals_System_Object_" target="_blank" rel="noopener noreferrer">Equals</a></td><td>Determines whether the specified object is equal to the current object.<br />(Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.finalize#System_Object_Finalize" target="_blank" rel="noopener noreferrer">Finalize</a></td><td>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.<br />(Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.gethashcode#System_Object_GetHashCode" target="_blank" rel="noopener noreferrer">GetHashCode</a></td><td>Serves as the default hash function.<br />(Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.gettype#System_Object_GetType" target="_blank" rel="noopener noreferrer">GetType</a></td><td>Gets the <a href="https://docs.microsoft.com/dotnet/api/system.type" target="_blank" rel="noopener noreferrer">Type</a> of the current instance.<br />(Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_MimeKit_Cryptography_DkimVerifierBase_IsEnabled.htm">IsEnabled</a></td><td>
            Check whether a DKIM signature algorithm is enabled.
            <br />(Inherited from <a href="T_MimeKit_Cryptography_DkimVerifierBase.htm">DkimVerifierBase</a>)</td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.memberwiseclone#System_Object_MemberwiseClone" target="_blank" rel="noopener noreferrer">MemberwiseClone</a></td><td>Creates a shallow copy of the current <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>.<br />(Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.tostring#System_Object_ToString" target="_blank" rel="noopener noreferrer">ToString</a></td><td>Returns a string that represents the current object.<br />(Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_MimeKit_Cryptography_DkimVerifier_Verify_1.htm">Verify(MimeMessage, Header, CancellationToken)</a></td><td>
            Verify the specified DKIM-Signature header.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_MimeKit_Cryptography_DkimVerifier_Verify.htm">Verify(FormatOptions, MimeMessage, Header, CancellationToken)</a></td><td>
            Verify the specified DKIM-Signature header.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_MimeKit_Cryptography_DkimVerifier_VerifyAsync_1.htm">VerifyAsync(MimeMessage, Header, CancellationToken)</a></td><td>
            Asynchronously verify the specified DKIM-Signature header.
            </td></tr><tr><td><img src="../icons/pubMethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_MimeKit_Cryptography_DkimVerifier_VerifyAsync.htm">VerifyAsync(FormatOptions, MimeMessage, Header, CancellationToken)</a></td><td>
            Asynchronously verify the specified DKIM-Signature header.
            </td></tr><tr><td><img src="../icons/protMethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_MimeKit_Cryptography_DkimVerifierBase_VerifySignature.htm">VerifySignature</a></td><td>
            Verify the signature of the message headers.
            <br />(Inherited from <a href="T_MimeKit_Cryptography_DkimVerifierBase.htm">DkimVerifierBase</a>)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDBC')" onkeypress="SectionExpandCollapse_CheckKey('IDBC', event)" tabindex="0"><img id="IDBCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDBCSection" class="collapsibleSection">
            Verifies DomainKeys Identified Mail (DKIM) signatures.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDCC')" onkeypress="SectionExpandCollapse_CheckKey('IDCC', event)" tabindex="0"><img id="IDCCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example</span></div><div id="IDCCSection" class="collapsibleSection"><div id="IDACC" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDACC_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDACC_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDACC');return false;" title="Copy">Copy</a></div></div><div id="IDACC_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.IO;
<span class="highlight-keyword">using</span> System.Text;
<span class="highlight-keyword">using</span> System.Threading;
<span class="highlight-keyword">using</span> System.Threading.Tasks;
<span class="highlight-keyword">using</span> System.Collections.Generic;

<span class="highlight-keyword">using</span> Heijden.DNS;

<span class="highlight-keyword">using</span> Org.BouncyCastle.Crypto;

<span class="highlight-keyword">using</span> MimeKit;
<span class="highlight-keyword">using</span> MimeKit.Cryptography;

<span class="highlight-keyword">namespace</span> DkimVerifierExample
{
    <span class="highlight-comment">// Note: By using the DkimPublicKeyLocatorBase, we avoid having to parse the DNS TXT records</span>
    <span class="highlight-comment">// in order to get the public key ourselves.</span>
    <span class="highlight-keyword">class</span> ExamplePublicKeyLocator : DkimPublicKeyLocatorBase
    {
        <span class="highlight-keyword">readonly</span> Dictionary&lt;<span class="highlight-keyword">string</span>, AsymmetricKeyParameter&gt; cache;
        <span class="highlight-keyword">readonly</span> Resolver resolver;

        <span class="highlight-keyword">public</span> ExamplePublicKeyLocator ()
        {
            cache = <span class="highlight-keyword">new</span> Dictionary&lt;<span class="highlight-keyword">string</span>, AsymmetricKeyParameter&gt; ();

            resolver = <span class="highlight-keyword">new</span> Resolver (<span class="highlight-literal">"8.8.8.8"</span>) {
                TransportType = TransportType.Udp,
                UseCache = <span class="highlight-keyword">true</span>,
                Retries = <span class="highlight-number">3</span>
            };
        }

        AsymmetricKeyParameter DnsLookup (<span class="highlight-keyword">string</span> domain, <span class="highlight-keyword">string</span> selector, CancellationToken cancellationToken)
        {
            <span class="highlight-keyword">var</span> query = selector + <span class="highlight-literal">"._domainkey."</span> + domain;
            AsymmetricKeyParameter pubkey;

            <span class="highlight-comment">// checked if we've already fetched this key</span>
            <span class="highlight-keyword">if</span> (cache.TryGetValue (query, <span class="highlight-keyword">out</span> pubkey))
                <span class="highlight-keyword">return</span> pubkey;

            <span class="highlight-comment">// make a DNS query</span>
            <span class="highlight-keyword">var</span> response = resolver.Query (query, QType.TXT);
            <span class="highlight-keyword">var</span> builder = <span class="highlight-keyword">new</span> StringBuilder ();

            <span class="highlight-comment">// combine the TXT records into 1 string buffer</span>
            <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> record <span class="highlight-keyword">in</span> response.RecordsTXT) {
                <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> text <span class="highlight-keyword">in</span> record.TXT)
                    builder.Append (text);
            }

            <span class="highlight-keyword">var</span> txt = builder.ToString ();

            <span class="highlight-comment">// DkimPublicKeyLocatorBase provides us with this helpful method.</span>
            pubkey = GetPublicKey (txt);

            cache.Add (query, pubkey);

            <span class="highlight-keyword">return</span> pubkey;
        }

        <span class="highlight-keyword">public</span> AsymmetricKeyParameter LocatePublicKey (<span class="highlight-keyword">string</span> methods, <span class="highlight-keyword">string</span> domain, <span class="highlight-keyword">string</span> selector, CancellationToken cancellationToken = <span class="highlight-keyword">default</span> (CancellationToken))
        {
            <span class="highlight-keyword">var</span> methodList = methods.Split (<span class="highlight-keyword">new</span> <span class="highlight-keyword">char</span>[] { <span class="highlight-literal">':'</span> }, StringSplitOptions.RemoveEmptyEntries);
            <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> i = <span class="highlight-number">0</span>; i &lt; methodList.Length; i++) {
                <span class="highlight-keyword">if</span> (methodList[i] == <span class="highlight-literal">"dns/txt"</span>)
                    <span class="highlight-keyword">return</span> DnsLookup (domain, selector, cancellationToken);
            }

            <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> NotSupportedException (<span class="highlight-keyword">string</span>.Format (<span class="highlight-literal">"{0} does not include any suported lookup methods."</span>, methods));
        }

        <span class="highlight-keyword">public</span> Task&lt;AsymmetricKeyParameter&gt; LocatePublicKeyAsync (<span class="highlight-keyword">string</span> methods, <span class="highlight-keyword">string</span> domain, <span class="highlight-keyword">string</span> selector, CancellationToken cancellationToken = <span class="highlight-keyword">default</span> (CancellationToken))
        {
            <span class="highlight-keyword">return</span> Task.Run (() =&gt; {
                <span class="highlight-keyword">return</span> LocatePublicKey (methods, domain, selector, cancellationToken);
            }, cancellationToken);
        }
    }

    <span class="highlight-keyword">class</span> Program
    {
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Main (<span class="highlight-keyword">string</span>[] args)
        {
            <span class="highlight-keyword">if</span> (args.Length == <span class="highlight-number">0</span>) {
                Help ();
                <span class="highlight-keyword">return</span>;
            }

            <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> i = <span class="highlight-number">0</span>; i &lt; args.Length; i++) {
                <span class="highlight-keyword">if</span> (args[i] == <span class="highlight-literal">"--help"</span>) {
                    Help ();
                    <span class="highlight-keyword">return</span>;
                }
            }

            <span class="highlight-keyword">var</span> locator = <span class="highlight-keyword">new</span> ExamplePublicKeyLocator ();
            <span class="highlight-keyword">var</span> verifier = <span class="highlight-keyword">new</span> DkimVerifier (locator);

            <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> i = <span class="highlight-number">0</span>; i &lt; args.Length; i++) {
                <span class="highlight-keyword">if</span> (!File.Exists (args[i])) {
                    Console.Error.WriteLine (<span class="highlight-literal">"{0}: No such file."</span>, args[i]);
                    <span class="highlight-keyword">continue</span>;
                }

                Console.Write (<span class="highlight-literal">"{0} -&gt; "</span>, args[i]);

                <span class="highlight-keyword">var</span> message = MimeMessage.Load (args[i]);
                <span class="highlight-keyword">var</span> index = message.Headers.IndexOf (HeaderId.DkimSignature);

                <span class="highlight-keyword">if</span> (index == <span class="highlight-number">-1</span>) {
                    Console.WriteLine (<span class="highlight-literal">"NO SIGNATURE"</span>);
                    <span class="highlight-keyword">continue</span>;
                }

                <span class="highlight-keyword">var</span> dkim = message.Headers[index];

                <span class="highlight-keyword">if</span> (verifier.Verify (message, dkim)) {
                    <span class="highlight-comment">// the DKIM-Signature header is valid!</span>
                    Console.ForegroundColor = ConsoleColor.Green;
                    Console.WriteLine (<span class="highlight-literal">"VALID"</span>);
                    Console.ResetColor ();
                } <span class="highlight-keyword">else</span> {
                    <span class="highlight-comment">// the DKIM-Signature is invalid!</span>
                    Console.ForegroundColor = ConsoleColor.Red;
                    Console.WriteLine (<span class="highlight-literal">"INVALID"</span>);
                    Console.ResetColor ();
                }
            }
        }

        <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Help ()
        {
            Console.WriteLine (<span class="highlight-literal">"Usage is: DkimVerifier [options] [messages]"</span>);
            Console.WriteLine ();
            Console.WriteLine (<span class="highlight-literal">"Options:"</span>);
            Console.WriteLine (<span class="highlight-literal">"  --help               This help menu."</span>);
        }
    }
}</pre></div></div></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="N_MimeKit_Cryptography.htm">MimeKit.Cryptography Namespace</a></div></div></div></div><div id="PageFooter" class="pageFooter"><!-- Global site tag (gtag.js) - Google Analytics -->
<script src="https://www.googletagmanager.com/gtag/js?id=UA-63841238-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-63841238-1');
</script><p><a href="https://github.com/jstedfast" target="_blank" rel="noopener noreferrer">Copyright © 2013-2023 Jeffrey Stedfast</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:jestedfa%40microsoft.com?Subject=MailKit%20Documentation">Jeffrey Stedfast</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script></div></body></html>