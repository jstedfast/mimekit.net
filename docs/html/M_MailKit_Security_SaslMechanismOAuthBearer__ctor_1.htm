<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>SaslMechanismOAuthBearer Constructor (String, String)</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:MailKit.Security.SaslMechanismOAuthBearer.#ctor(System.String,System.String)" /><meta name="Description" content="Initializes a new instance of the class." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="MailKit.Security" /><meta name="file" content="M_MailKit_Security_SaslMechanismOAuthBearer__ctor_1" /><meta name="guid" content="M_MailKit_Security_SaslMechanismOAuthBearer__ctor_1" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">MailKit Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Introduction.htm" title="MailKit Documentation" tocid="roottoc">MailKit Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="API Reference" tocid="R_Project_Documentation">API Reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_MailKit_Security.htm" title="MailKit.Security" tocid="N_MailKit_Security">MailKit.Security</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_MailKit_Security_SaslMechanismOAuthBearer.htm" title="SaslMechanismOAuthBearer Class" tocid="T_MailKit_Security_SaslMechanismOAuthBearer">SaslMechanismOAuthBearer Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_MailKit_Security_SaslMechanismOAuthBearer__ctor.htm" title="SaslMechanismOAuthBearer Constructor " tocid="Overload_MailKit_Security_SaslMechanismOAuthBearer__ctor">SaslMechanismOAuthBearer Constructor </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MailKit_Security_SaslMechanismOAuthBearer__ctor.htm" title="SaslMechanismOAuthBearer Constructor (NetworkCredential)" tocid="M_MailKit_Security_SaslMechanismOAuthBearer__ctor">SaslMechanismOAuthBearer Constructor (NetworkCredential)</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MailKit_Security_SaslMechanismOAuthBearer__ctor_1.htm" title="SaslMechanismOAuthBearer Constructor (String, String)" tocid="M_MailKit_Security_SaslMechanismOAuthBearer__ctor_1">SaslMechanismOAuthBearer Constructor (String, String)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MailKit_Security_SaslMechanismOAuthBearer__ctor_2.htm" title="SaslMechanismOAuthBearer Constructor (Uri, ICredentials)" tocid="M_MailKit_Security_SaslMechanismOAuthBearer__ctor_2">SaslMechanismOAuthBearer Constructor (Uri, ICredentials)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MailKit_Security_SaslMechanismOAuthBearer__ctor_3.htm" title="SaslMechanismOAuthBearer Constructor (Uri, String, String)" tocid="M_MailKit_Security_SaslMechanismOAuthBearer__ctor_3">SaslMechanismOAuthBearer Constructor (Uri, String, String)</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="MimeKit" src="../icons/Help.png" /></td><td class="titleColumn"><h1>SaslMechanismOAuthBearer Constructor (String, String)</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Initializes a new instance of the <a href="T_MailKit_Security_SaslMechanismOAuthBearer.htm">SaslMechanismOAuthBearer</a> class.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_MailKit_Security.htm">MailKit.Security</a><br />
    <strong>Assembly:</strong>
   MailKit (in MailKit.dll) Version: 2.14.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">SaslMechanismOAuthBearer</span>(
	<span class="identifier">string</span> <span class="parameter">userName</span>,
	<span class="identifier">string</span> <span class="parameter">auth_token</span>
)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">userName</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">System<span id="LSTF1B66834_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF1B66834_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>String</a><br />The user name.</dd><dt><span class="parameter">auth_token</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">System<span id="LSTF1B66834_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF1B66834_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>String</a><br />The auth token.</dd></dl></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="tableSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="https://docs.microsoft.com/dotnet/api/system.argumentnullexception" target="_blank" rel="noopener noreferrer">ArgumentNullException</a></td><td><p><span class="parameter">userName</span> is <span class="code">null</span>.</p><p>-or-</p><p><span class="parameter">auth_token</span> is <span class="code">null</span>.</p></td></tr></table></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID3RBSection" class="collapsibleSection">
            Creates a new OAUTHBEARER SASL context.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID4RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EABDBA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABDBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EABDBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EABDBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.Threading;
<span class="highlight-keyword">using</span> System.Threading.Tasks;

<span class="highlight-keyword">using</span> Google.Apis.Util;
<span class="highlight-keyword">using</span> Google.Apis.Util.Store;
<span class="highlight-keyword">using</span> Google.Apis.Auth.OAuth2;
<span class="highlight-keyword">using</span> Google.Apis.Auth.OAuth2.Flows;

<span class="highlight-keyword">using</span> MailKit;
<span class="highlight-keyword">using</span> MailKit.Net.Imap;
<span class="highlight-keyword">using</span> MailKit.Security;

<span class="highlight-keyword">namespace</span> OAuth2GMailExample {
    <span class="highlight-keyword">class</span> Program
    {
        <span class="highlight-keyword">const</span> <span class="highlight-keyword">string</span> GMailAccount = <span class="highlight-literal">"username@gmail.com"</span>;

        <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Main (<span class="highlight-keyword">string</span>[] args)
        {
            <span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> client = <span class="highlight-keyword">new</span> ImapClient ()) {
                client.Connect (<span class="highlight-literal">"imap.gmail.com"</span>, <span class="highlight-number">993</span>, SecureSocketOptions.SslOnConnect);
                <span class="highlight-keyword">if</span> (client.AuthenticationMechanisms.Contains (<span class="highlight-literal">"OAUTHBEARER"</span>) || client.AuthenticationMechanisms.Contains (<span class="highlight-literal">"XOAUTH2"</span>))
                    OAuthAsync (client).GetAwaiter ().GetResult ();
                client.Disconnect (<span class="highlight-keyword">true</span>);
            }
        }

        <span class="highlight-keyword">static</span> <span class="highlight-keyword">async</span> Task OAuthAsync (ImapClient client)
        {
            <span class="highlight-keyword">var</span> clientSecrets = <span class="highlight-keyword">new</span> ClientSecrets {
                ClientId = <span class="highlight-literal">"XXX.apps.googleusercontent.com"</span>,
                ClientSecret = <span class="highlight-literal">"XXX"</span>
            };

            <span class="highlight-keyword">var</span> codeFlow = <span class="highlight-keyword">new</span> GoogleAuthorizationCodeFlow (<span class="highlight-keyword">new</span> GoogleAuthorizationCodeFlow.Initializer {
                DataStore = <span class="highlight-keyword">new</span> FileDataStore (<span class="highlight-literal">"CredentialCacheFolder"</span>, <span class="highlight-keyword">false</span>),
                Scopes = <span class="highlight-keyword">new</span> [] { <span class="highlight-literal">"https://mail.google.com/"</span> },
                ClientSecrets = clientSecrets
            });

            <span class="highlight-comment">// Note: For a web app, you'll want to use AuthorizationCodeWebApp instead.</span>
            <span class="highlight-keyword">var</span> codeReceiver = <span class="highlight-keyword">new</span> LocalServerCodeReceiver ();
            <span class="highlight-keyword">var</span> authCode = <span class="highlight-keyword">new</span> AuthorizationCodeInstalledApp (codeFlow, codeReceiver);

            <span class="highlight-keyword">var</span> credential = <span class="highlight-keyword">await</span> authCode.AuthorizeAsync (GMailAccount, CancellationToken.None);

            <span class="highlight-keyword">if</span> (credential.Token.IsExpired (SystemClock.Default))
                <span class="highlight-keyword">await</span> credential.RefreshTokenAsync (CancellationToken.None);

            <span class="highlight-comment">// Note: We use credential.UserId here instead of GMailAccount because the user *may* have chosen a</span>
            <span class="highlight-comment">// different GMail account when presented with the browser window during the authentication process.</span>
            SaslMechanism oauth2;

            <span class="highlight-keyword">if</span> (client.AuthenticationMechanisms.Contains (<span class="highlight-literal">"OAUTHBEARER"</span>))
                oauth2 = <span class="highlight-keyword">new</span> SaslMechanismOAuthBearer (credential.UserId, credential.Token.AccessToken);
            <span class="highlight-keyword">else</span>
                oauth2 = <span class="highlight-keyword">new</span> SaslMechanismOAuth2 (credential.UserId, credential.Token.AccessToken);

            <span class="highlight-keyword">await</span> client.AuthenticateAsync (oauth2);
        }
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABDBA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAADBA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAADBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAADBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAADBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.Threading;
<span class="highlight-keyword">using</span> System.Threading.Tasks;

<span class="highlight-keyword">using</span> MailKit;
<span class="highlight-keyword">using</span> MailKit.Net.Imap;
<span class="highlight-keyword">using</span> MailKit.Security;

<span class="highlight-keyword">using</span> Microsoft.Identity.Client;

<span class="highlight-keyword">namespace</span> OAuth2ExchangeExample {
    <span class="highlight-keyword">class</span> Program
    {
        <span class="highlight-keyword">const</span> <span class="highlight-keyword">string</span> ExchangeAccount = <span class="highlight-literal">"username@office365.com"</span>;

        <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Main (<span class="highlight-keyword">string</span>[] args)
        {
            <span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> client = <span class="highlight-keyword">new</span> ImapClient ()) {
                client.Connect (<span class="highlight-literal">"outlook.office365.com"</span>, <span class="highlight-number">993</span>, SecureSocketOptions.SslOnConnect);
                <span class="highlight-keyword">if</span> (client.AuthenticationMechanisms.Contains (<span class="highlight-literal">"OAUTHBEARER"</span>) || client.AuthenticationMechanisms.Contains (<span class="highlight-literal">"XOAUTH2"</span>))
                    AuthenticateAsync (client).GetAwaiter ().GetResult ();
                client.Disconnect (<span class="highlight-keyword">true</span>);
            }
        }

        <span class="highlight-keyword">static</span> <span class="highlight-keyword">async</span> Task AuthenticateAsync (ImapClient client)
        {
            <span class="highlight-keyword">var</span> options = <span class="highlight-keyword">new</span> PublicClientApplicationOptions {
                ClientId = <span class="highlight-literal">"Application (client) ID"</span>,
                TenantId = <span class="highlight-literal">"Directory (tenant) ID"</span>,
                RedirectUri = <span class="highlight-literal">"https://login.microsoftonline.com/common/oauth2/nativeclient"</span>
            };

            <span class="highlight-keyword">var</span> publicClientApplication = PublicClientApplicationBuilder
                .CreateWithApplicationOptions (options)
                .Build ();

            <span class="highlight-keyword">var</span> scopes = <span class="highlight-keyword">new</span> <span class="highlight-keyword">string</span>[] {
                <span class="highlight-literal">"email"</span>,
                <span class="highlight-literal">"offline_access"</span>,
                <span class="highlight-literal">"https://outlook.office.com/IMAP.AccessAsUser.All"</span>, <span class="highlight-comment">// Only needed for IMAP</span>
                <span class="highlight-comment">//"https://outlook.office.com/POP.AccessAsUser.All",  // Only needed for POP</span>
                <span class="highlight-comment">//"https://outlook.office.com/SMTP.AccessAsUser.All", // Only needed for SMTP</span>
            };

            <span class="highlight-keyword">var</span> authToken = <span class="highlight-keyword">await</span> publicClientApplication.AcquireTokenInteractive (scopes).WithLoginHint (ExchangeAccount).ExecuteAsync (cancellationToken);
            <span class="highlight-keyword">await</span> publicClientApplication.AcquireTokenSilent (scopes, authToken.Account).ExecuteAsync (cancellationToken);

            <span class="highlight-comment">// Note: We use authToken.Account.Username here instead of ExchangeAccount because the user *may* have chosen a</span>
            <span class="highlight-comment">// different Microsoft Exchange account when presented with the browser window during the authentication process.</span>
            SaslMechanism oauth2;

            <span class="highlight-keyword">if</span> (client.AuthenticationMechanisms.Contains (<span class="highlight-literal">"OAUTHBEARER"</span>))
                oauth2 = <span class="highlight-keyword">new</span> SaslMechanismOAuthBearer (authToken.Account.Username, authToken.AccessToken);
            <span class="highlight-keyword">else</span>
                oauth2 = <span class="highlight-keyword">new</span> SaslMechanismOAuth2 (authToken.Account.Username, authToken.AccessToken);

            <span class="highlight-keyword">await</span> client.AuthenticateAsync (oauth2);
        }
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAADBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID5RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_MailKit_Security_SaslMechanismOAuthBearer.htm">SaslMechanismOAuthBearer Class</a></div><div class="seeAlsoStyle"><a href="Overload_MailKit_Security_SaslMechanismOAuthBearer__ctor.htm">SaslMechanismOAuthBearer Overload</a></div><div class="seeAlsoStyle"><a href="N_MailKit_Security.htm">MailKit.Security Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><!-- Global site tag (gtag.js) - Google Analytics -->
<script src="https://www.googletagmanager.com/gtag/js?id=UA-63841238-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-63841238-1');
</script><p><a href="https://github.com/jstedfast" target="_blank" rel="noopener noreferrer">Copyright © 2013-2021 Jeffrey Stedfast</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:jestedfa%40microsoft.com?Subject=MailKit%20Documentation">Jeffrey Stedfast</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>